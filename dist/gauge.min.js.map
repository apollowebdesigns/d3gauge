{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/d3/dist/package.js","webpack:///./node_modules/d3-array/src/ascending.js","webpack:///./node_modules/d3-array/src/bisector.js","webpack:///./node_modules/d3-array/src/bisect.js","webpack:///./node_modules/d3-array/src/pairs.js","webpack:///./node_modules/d3-array/src/cross.js","webpack:///./node_modules/d3-array/src/descending.js","webpack:///./node_modules/d3-array/src/number.js","webpack:///./node_modules/d3-array/src/variance.js","webpack:///./node_modules/d3-array/src/deviation.js","webpack:///./node_modules/d3-array/src/extent.js","webpack:///./node_modules/d3-array/src/array.js","webpack:///./node_modules/d3-array/src/constant.js","webpack:///./node_modules/d3-array/src/identity.js","webpack:///./node_modules/d3-array/src/range.js","webpack:///./node_modules/d3-array/src/ticks.js","webpack:///./node_modules/d3-array/src/threshold/sturges.js","webpack:///./node_modules/d3-array/src/histogram.js","webpack:///./node_modules/d3-array/src/quantile.js","webpack:///./node_modules/d3-array/src/threshold/freedmanDiaconis.js","webpack:///./node_modules/d3-array/src/threshold/scott.js","webpack:///./node_modules/d3-array/src/max.js","webpack:///./node_modules/d3-array/src/mean.js","webpack:///./node_modules/d3-array/src/median.js","webpack:///./node_modules/d3-array/src/merge.js","webpack:///./node_modules/d3-array/src/min.js","webpack:///./node_modules/d3-array/src/permute.js","webpack:///./node_modules/d3-array/src/scan.js","webpack:///./node_modules/d3-array/src/shuffle.js","webpack:///./node_modules/d3-array/src/sum.js","webpack:///./node_modules/d3-array/src/transpose.js","webpack:///./node_modules/d3-array/src/zip.js","webpack:///./node_modules/d3-axis/src/array.js","webpack:///./node_modules/d3-axis/src/identity.js","webpack:///./node_modules/d3-axis/src/axis.js","webpack:///./node_modules/d3-dispatch/src/dispatch.js","webpack:///./node_modules/d3-selection/src/namespaces.js","webpack:///./node_modules/d3-selection/src/namespace.js","webpack:///./node_modules/d3-selection/src/creator.js","webpack:///./node_modules/d3-selection/src/selector.js","webpack:///./node_modules/d3-selection/src/selectorAll.js","webpack:///./node_modules/d3-selection/src/matcher.js","webpack:///./node_modules/d3-selection/src/selection/sparse.js","webpack:///./node_modules/d3-selection/src/selection/enter.js","webpack:///./node_modules/d3-selection/src/constant.js","webpack:///./node_modules/d3-selection/src/selection/data.js","webpack:///./node_modules/d3-selection/src/selection/sort.js","webpack:///./node_modules/d3-selection/src/selection/attr.js","webpack:///./node_modules/d3-selection/src/window.js","webpack:///./node_modules/d3-selection/src/selection/style.js","webpack:///./node_modules/d3-selection/src/selection/classed.js","webpack:///./node_modules/d3-selection/src/selection/text.js","webpack:///./node_modules/d3-selection/src/selection/html.js","webpack:///./node_modules/d3-selection/src/selection/raise.js","webpack:///./node_modules/d3-selection/src/selection/lower.js","webpack:///./node_modules/d3-selection/src/selection/insert.js","webpack:///./node_modules/d3-selection/src/selection/remove.js","webpack:///./node_modules/d3-selection/src/selection/clone.js","webpack:///./node_modules/d3-selection/src/selection/on.js","webpack:///./node_modules/d3-selection/src/selection/dispatch.js","webpack:///./node_modules/d3-selection/src/selection/index.js","webpack:///./node_modules/d3-selection/src/selection/select.js","webpack:///./node_modules/d3-selection/src/selection/selectAll.js","webpack:///./node_modules/d3-selection/src/selection/filter.js","webpack:///./node_modules/d3-selection/src/selection/exit.js","webpack:///./node_modules/d3-selection/src/selection/join.js","webpack:///./node_modules/d3-selection/src/selection/merge.js","webpack:///./node_modules/d3-selection/src/selection/order.js","webpack:///./node_modules/d3-selection/src/selection/call.js","webpack:///./node_modules/d3-selection/src/selection/nodes.js","webpack:///./node_modules/d3-selection/src/selection/node.js","webpack:///./node_modules/d3-selection/src/selection/size.js","webpack:///./node_modules/d3-selection/src/selection/empty.js","webpack:///./node_modules/d3-selection/src/selection/each.js","webpack:///./node_modules/d3-selection/src/selection/property.js","webpack:///./node_modules/d3-selection/src/selection/append.js","webpack:///./node_modules/d3-selection/src/selection/datum.js","webpack:///./node_modules/d3-selection/src/select.js","webpack:///./node_modules/d3-selection/src/create.js","webpack:///./node_modules/d3-selection/src/local.js","webpack:///./node_modules/d3-selection/src/sourceEvent.js","webpack:///./node_modules/d3-selection/src/point.js","webpack:///./node_modules/d3-selection/src/mouse.js","webpack:///./node_modules/d3-selection/src/selectAll.js","webpack:///./node_modules/d3-selection/src/touch.js","webpack:///./node_modules/d3-selection/src/touches.js","webpack:///./node_modules/d3-drag/src/noevent.js","webpack:///./node_modules/d3-drag/src/nodrag.js","webpack:///./node_modules/d3-drag/src/constant.js","webpack:///./node_modules/d3-drag/src/event.js","webpack:///./node_modules/d3-drag/src/drag.js","webpack:///./node_modules/d3-color/src/define.js","webpack:///./node_modules/d3-color/src/color.js","webpack:///./node_modules/d3-interpolate/src/basis.js","webpack:///./node_modules/d3-interpolate/src/basisClosed.js","webpack:///./node_modules/d3-interpolate/src/constant.js","webpack:///./node_modules/d3-interpolate/src/color.js","webpack:///./node_modules/d3-interpolate/src/rgb.js","webpack:///./node_modules/d3-interpolate/src/array.js","webpack:///./node_modules/d3-interpolate/src/date.js","webpack:///./node_modules/d3-interpolate/src/number.js","webpack:///./node_modules/d3-interpolate/src/object.js","webpack:///./node_modules/d3-interpolate/src/string.js","webpack:///./node_modules/d3-interpolate/src/transform/parse.js","webpack:///./node_modules/d3-interpolate/src/value.js","webpack:///./node_modules/d3-interpolate/src/discrete.js","webpack:///./node_modules/d3-interpolate/src/hue.js","webpack:///./node_modules/d3-interpolate/src/round.js","webpack:///./node_modules/d3-interpolate/src/transform/decompose.js","webpack:///./node_modules/d3-interpolate/src/transform/index.js","webpack:///./node_modules/d3-interpolate/src/zoom.js","webpack:///./node_modules/d3-interpolate/src/hsl.js","webpack:///./node_modules/d3-color/src/math.js","webpack:///./node_modules/d3-color/src/lab.js","webpack:///./node_modules/d3-interpolate/src/lab.js","webpack:///./node_modules/d3-interpolate/src/hcl.js","webpack:///./node_modules/d3-color/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/piecewise.js","webpack:///./node_modules/d3-interpolate/src/quantize.js","webpack:///./node_modules/d3-timer/src/timer.js","webpack:///./node_modules/d3-timer/src/timeout.js","webpack:///./node_modules/d3-timer/src/interval.js","webpack:///./node_modules/d3-transition/src/transition/schedule.js","webpack:///./node_modules/d3-transition/src/interrupt.js","webpack:///./node_modules/d3-transition/src/transition/tween.js","webpack:///./node_modules/d3-transition/src/transition/interpolate.js","webpack:///./node_modules/d3-transition/src/transition/remove.js","webpack:///./node_modules/d3-transition/src/transition/selection.js","webpack:///./node_modules/d3-transition/src/transition/style.js","webpack:///./node_modules/d3-transition/src/transition/text.js","webpack:///./node_modules/d3-transition/src/transition/index.js","webpack:///./node_modules/d3-ease/src/linear.js","webpack:///./node_modules/d3-ease/src/quad.js","webpack:///./node_modules/d3-ease/src/cubic.js","webpack:///./node_modules/d3-transition/src/transition/select.js","webpack:///./node_modules/d3-transition/src/transition/selectAll.js","webpack:///./node_modules/d3-transition/src/transition/filter.js","webpack:///./node_modules/d3-transition/src/transition/merge.js","webpack:///./node_modules/d3-transition/src/transition/transition.js","webpack:///./node_modules/d3-transition/src/transition/on.js","webpack:///./node_modules/d3-transition/src/transition/attr.js","webpack:///./node_modules/d3-transition/src/transition/attrTween.js","webpack:///./node_modules/d3-transition/src/transition/styleTween.js","webpack:///./node_modules/d3-transition/src/transition/delay.js","webpack:///./node_modules/d3-transition/src/transition/duration.js","webpack:///./node_modules/d3-transition/src/transition/ease.js","webpack:///./node_modules/d3-transition/src/transition/end.js","webpack:///./node_modules/d3-ease/src/poly.js","webpack:///./node_modules/d3-ease/src/sin.js","webpack:///./node_modules/d3-ease/src/exp.js","webpack:///./node_modules/d3-ease/src/circle.js","webpack:///./node_modules/d3-ease/src/bounce.js","webpack:///./node_modules/d3-ease/src/back.js","webpack:///./node_modules/d3-ease/src/elastic.js","webpack:///./node_modules/d3-transition/src/selection/transition.js","webpack:///./node_modules/d3-transition/src/selection/index.js","webpack:///./node_modules/d3-transition/src/selection/interrupt.js","webpack:///./node_modules/d3-transition/src/active.js","webpack:///./node_modules/d3-brush/src/constant.js","webpack:///./node_modules/d3-brush/src/event.js","webpack:///./node_modules/d3-brush/src/noevent.js","webpack:///./node_modules/d3-brush/src/brush.js","webpack:///./node_modules/d3-chord/src/math.js","webpack:///./node_modules/d3-chord/src/chord.js","webpack:///./node_modules/d3-chord/src/array.js","webpack:///./node_modules/d3-chord/src/constant.js","webpack:///./node_modules/d3-path/src/path.js","webpack:///./node_modules/d3-chord/src/ribbon.js","webpack:///./node_modules/d3-collection/src/map.js","webpack:///./node_modules/d3-collection/src/nest.js","webpack:///./node_modules/d3-collection/src/set.js","webpack:///./node_modules/d3-collection/src/keys.js","webpack:///./node_modules/d3-collection/src/values.js","webpack:///./node_modules/d3-collection/src/entries.js","webpack:///./node_modules/d3-contour/src/array.js","webpack:///./node_modules/d3-contour/src/ascending.js","webpack:///./node_modules/d3-contour/src/area.js","webpack:///./node_modules/d3-contour/src/constant.js","webpack:///./node_modules/d3-contour/src/contains.js","webpack:///./node_modules/d3-contour/src/noop.js","webpack:///./node_modules/d3-contour/src/contours.js","webpack:///./node_modules/d3-contour/src/blur.js","webpack:///./node_modules/d3-contour/src/density.js","webpack:///./node_modules/d3-dsv/src/dsv.js","webpack:///./node_modules/d3-dsv/src/csv.js","webpack:///./node_modules/d3-dsv/src/tsv.js","webpack:///./node_modules/d3-dsv/src/autoType.js","webpack:///./node_modules/d3-fetch/src/blob.js","webpack:///./node_modules/d3-fetch/src/buffer.js","webpack:///./node_modules/d3-fetch/src/text.js","webpack:///./node_modules/d3-fetch/src/dsv.js","webpack:///./node_modules/d3-fetch/src/image.js","webpack:///./node_modules/d3-fetch/src/json.js","webpack:///./node_modules/d3-fetch/src/xml.js","webpack:///./node_modules/d3-force/src/center.js","webpack:///./node_modules/d3-force/src/constant.js","webpack:///./node_modules/d3-force/src/jiggle.js","webpack:///./node_modules/d3-quadtree/src/add.js","webpack:///./node_modules/d3-quadtree/src/cover.js","webpack:///./node_modules/d3-quadtree/src/quad.js","webpack:///./node_modules/d3-quadtree/src/x.js","webpack:///./node_modules/d3-quadtree/src/y.js","webpack:///./node_modules/d3-quadtree/src/quadtree.js","webpack:///./node_modules/d3-force/src/collide.js","webpack:///./node_modules/d3-quadtree/src/data.js","webpack:///./node_modules/d3-quadtree/src/extent.js","webpack:///./node_modules/d3-quadtree/src/find.js","webpack:///./node_modules/d3-quadtree/src/remove.js","webpack:///./node_modules/d3-quadtree/src/root.js","webpack:///./node_modules/d3-quadtree/src/size.js","webpack:///./node_modules/d3-quadtree/src/visit.js","webpack:///./node_modules/d3-quadtree/src/visitAfter.js","webpack:///./node_modules/d3-force/src/link.js","webpack:///./node_modules/d3-force/src/simulation.js","webpack:///./node_modules/d3-force/src/manyBody.js","webpack:///./node_modules/d3-force/src/radial.js","webpack:///./node_modules/d3-force/src/x.js","webpack:///./node_modules/d3-force/src/y.js","webpack:///./node_modules/d3-format/src/formatDecimal.js","webpack:///./node_modules/d3-format/src/exponent.js","webpack:///./node_modules/d3-format/src/formatSpecifier.js","webpack:///./node_modules/d3-format/src/formatTrim.js","webpack:///./node_modules/d3-format/src/formatPrefixAuto.js","webpack:///./node_modules/d3-format/src/defaultLocale.js","webpack:///./node_modules/d3-format/src/formatRounded.js","webpack:///./node_modules/d3-format/src/formatTypes.js","webpack:///./node_modules/d3-format/src/identity.js","webpack:///./node_modules/d3-format/src/locale.js","webpack:///./node_modules/d3-format/src/formatGroup.js","webpack:///./node_modules/d3-format/src/formatNumerals.js","webpack:///./node_modules/d3-format/src/precisionFixed.js","webpack:///./node_modules/d3-format/src/precisionPrefix.js","webpack:///./node_modules/d3-format/src/precisionRound.js","webpack:///./node_modules/d3-geo/src/adder.js","webpack:///./node_modules/d3-geo/src/math.js","webpack:///./node_modules/d3-geo/src/noop.js","webpack:///./node_modules/d3-geo/src/stream.js","webpack:///./node_modules/d3-geo/src/area.js","webpack:///./node_modules/d3-geo/src/cartesian.js","webpack:///./node_modules/d3-geo/src/bounds.js","webpack:///./node_modules/d3-geo/src/centroid.js","webpack:///./node_modules/d3-geo/src/constant.js","webpack:///./node_modules/d3-geo/src/compose.js","webpack:///./node_modules/d3-geo/src/rotation.js","webpack:///./node_modules/d3-geo/src/circle.js","webpack:///./node_modules/d3-geo/src/clip/buffer.js","webpack:///./node_modules/d3-geo/src/pointEqual.js","webpack:///./node_modules/d3-geo/src/clip/rejoin.js","webpack:///./node_modules/d3-geo/src/polygonContains.js","webpack:///./node_modules/d3-geo/src/clip/index.js","webpack:///./node_modules/d3-geo/src/clip/antimeridian.js","webpack:///./node_modules/d3-geo/src/clip/circle.js","webpack:///./node_modules/d3-geo/src/clip/line.js","webpack:///./node_modules/d3-geo/src/clip/rectangle.js","webpack:///./node_modules/d3-geo/src/clip/extent.js","webpack:///./node_modules/d3-geo/src/length.js","webpack:///./node_modules/d3-geo/src/distance.js","webpack:///./node_modules/d3-geo/src/contains.js","webpack:///./node_modules/d3-geo/src/graticule.js","webpack:///./node_modules/d3-geo/src/interpolate.js","webpack:///./node_modules/d3-geo/src/path/area.js","webpack:///./node_modules/d3-geo/src/identity.js","webpack:///./node_modules/d3-geo/src/path/bounds.js","webpack:///./node_modules/d3-geo/src/path/centroid.js","webpack:///./node_modules/d3-geo/src/path/context.js","webpack:///./node_modules/d3-geo/src/path/measure.js","webpack:///./node_modules/d3-geo/src/path/string.js","webpack:///./node_modules/d3-geo/src/path/index.js","webpack:///./node_modules/d3-geo/src/transform.js","webpack:///./node_modules/d3-geo/src/projection/fit.js","webpack:///./node_modules/d3-geo/src/projection/resample.js","webpack:///./node_modules/d3-geo/src/projection/index.js","webpack:///./node_modules/d3-geo/src/projection/conic.js","webpack:///./node_modules/d3-geo/src/projection/conicEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/cylindricalEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/albers.js","webpack:///./node_modules/d3-geo/src/projection/albersUsa.js","webpack:///./node_modules/d3-geo/src/projection/azimuthal.js","webpack:///./node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack:///./node_modules/d3-geo/src/projection/mercator.js","webpack:///./node_modules/d3-geo/src/projection/conicConformal.js","webpack:///./node_modules/d3-geo/src/projection/equirectangular.js","webpack:///./node_modules/d3-geo/src/projection/conicEquidistant.js","webpack:///./node_modules/d3-geo/src/projection/equalEarth.js","webpack:///./node_modules/d3-geo/src/projection/gnomonic.js","webpack:///./node_modules/d3-geo/src/projection/identity.js","webpack:///./node_modules/d3-geo/src/projection/naturalEarth1.js","webpack:///./node_modules/d3-geo/src/projection/orthographic.js","webpack:///./node_modules/d3-geo/src/projection/stereographic.js","webpack:///./node_modules/d3-geo/src/projection/transverseMercator.js","webpack:///./node_modules/d3-hierarchy/src/cluster.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/count.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/index.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/each.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/path.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/links.js","webpack:///./node_modules/d3-hierarchy/src/array.js","webpack:///./node_modules/d3-hierarchy/src/pack/enclose.js","webpack:///./node_modules/d3-hierarchy/src/pack/siblings.js","webpack:///./node_modules/d3-hierarchy/src/accessors.js","webpack:///./node_modules/d3-hierarchy/src/constant.js","webpack:///./node_modules/d3-hierarchy/src/pack/index.js","webpack:///./node_modules/d3-hierarchy/src/treemap/round.js","webpack:///./node_modules/d3-hierarchy/src/treemap/dice.js","webpack:///./node_modules/d3-hierarchy/src/partition.js","webpack:///./node_modules/d3-hierarchy/src/stratify.js","webpack:///./node_modules/d3-hierarchy/src/tree.js","webpack:///./node_modules/d3-hierarchy/src/treemap/slice.js","webpack:///./node_modules/d3-hierarchy/src/treemap/squarify.js","webpack:///./node_modules/d3-hierarchy/src/treemap/index.js","webpack:///./node_modules/d3-hierarchy/src/treemap/binary.js","webpack:///./node_modules/d3-hierarchy/src/treemap/sliceDice.js","webpack:///./node_modules/d3-hierarchy/src/treemap/resquarify.js","webpack:///./node_modules/d3-polygon/src/area.js","webpack:///./node_modules/d3-polygon/src/centroid.js","webpack:///./node_modules/d3-polygon/src/cross.js","webpack:///./node_modules/d3-polygon/src/hull.js","webpack:///./node_modules/d3-polygon/src/contains.js","webpack:///./node_modules/d3-polygon/src/length.js","webpack:///./node_modules/d3-random/src/defaultSource.js","webpack:///./node_modules/d3-random/src/uniform.js","webpack:///./node_modules/d3-random/src/normal.js","webpack:///./node_modules/d3-random/src/logNormal.js","webpack:///./node_modules/d3-random/src/irwinHall.js","webpack:///./node_modules/d3-random/src/bates.js","webpack:///./node_modules/d3-random/src/exponential.js","webpack:///./node_modules/d3-scale/src/init.js","webpack:///./node_modules/d3-scale/src/array.js","webpack:///./node_modules/d3-scale/src/ordinal.js","webpack:///./node_modules/d3-scale/src/band.js","webpack:///./node_modules/d3-scale/src/constant.js","webpack:///./node_modules/d3-scale/src/number.js","webpack:///./node_modules/d3-scale/src/continuous.js","webpack:///./node_modules/d3-scale/src/tickFormat.js","webpack:///./node_modules/d3-scale/src/linear.js","webpack:///./node_modules/d3-scale/src/identity.js","webpack:///./node_modules/d3-scale/src/nice.js","webpack:///./node_modules/d3-scale/src/log.js","webpack:///./node_modules/d3-scale/src/symlog.js","webpack:///./node_modules/d3-scale/src/pow.js","webpack:///./node_modules/d3-scale/src/quantile.js","webpack:///./node_modules/d3-scale/src/quantize.js","webpack:///./node_modules/d3-scale/src/threshold.js","webpack:///./node_modules/d3-time/src/interval.js","webpack:///./node_modules/d3-time/src/year.js","webpack:///./node_modules/d3-time/src/month.js","webpack:///./node_modules/d3-time/src/duration.js","webpack:///./node_modules/d3-time/src/week.js","webpack:///./node_modules/d3-time/src/day.js","webpack:///./node_modules/d3-time/src/hour.js","webpack:///./node_modules/d3-time/src/minute.js","webpack:///./node_modules/d3-time/src/second.js","webpack:///./node_modules/d3-time/src/millisecond.js","webpack:///./node_modules/d3-time/src/utcWeek.js","webpack:///./node_modules/d3-time/src/utcDay.js","webpack:///./node_modules/d3-time/src/utcYear.js","webpack:///./node_modules/d3-time-format/src/locale.js","webpack:///./node_modules/d3-time-format/src/defaultLocale.js","webpack:///./node_modules/d3-scale/src/time.js","webpack:///./node_modules/d3-time/src/utcMonth.js","webpack:///./node_modules/d3-time/src/utcHour.js","webpack:///./node_modules/d3-time/src/utcMinute.js","webpack:///./node_modules/d3-scale/src/utcTime.js","webpack:///./node_modules/d3-scale/src/sequential.js","webpack:///./node_modules/d3-scale/src/sequentialQuantile.js","webpack:///./node_modules/d3-scale/src/diverging.js","webpack:///./node_modules/d3-scale-chromatic/src/colors.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Tableau10.js","webpack:///./node_modules/d3-scale-chromatic/src/ramp.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/cividis.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/turbo.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack:///./node_modules/d3-shape/src/constant.js","webpack:///./node_modules/d3-shape/src/math.js","webpack:///./node_modules/d3-shape/src/arc.js","webpack:///./node_modules/d3-shape/src/curve/linear.js","webpack:///./node_modules/d3-shape/src/point.js","webpack:///./node_modules/d3-shape/src/line.js","webpack:///./node_modules/d3-shape/src/area.js","webpack:///./node_modules/d3-shape/src/descending.js","webpack:///./node_modules/d3-shape/src/identity.js","webpack:///./node_modules/d3-shape/src/pie.js","webpack:///./node_modules/d3-shape/src/curve/radial.js","webpack:///./node_modules/d3-shape/src/lineRadial.js","webpack:///./node_modules/d3-shape/src/areaRadial.js","webpack:///./node_modules/d3-shape/src/pointRadial.js","webpack:///./node_modules/d3-shape/src/array.js","webpack:///./node_modules/d3-shape/src/link/index.js","webpack:///./node_modules/d3-shape/src/symbol/circle.js","webpack:///./node_modules/d3-shape/src/symbol/cross.js","webpack:///./node_modules/d3-shape/src/symbol/diamond.js","webpack:///./node_modules/d3-shape/src/symbol/star.js","webpack:///./node_modules/d3-shape/src/symbol/square.js","webpack:///./node_modules/d3-shape/src/symbol/triangle.js","webpack:///./node_modules/d3-shape/src/symbol/wye.js","webpack:///./node_modules/d3-shape/src/symbol.js","webpack:///./node_modules/d3-shape/src/noop.js","webpack:///./node_modules/d3-shape/src/curve/basis.js","webpack:///./node_modules/d3-shape/src/curve/basisClosed.js","webpack:///./node_modules/d3-shape/src/curve/basisOpen.js","webpack:///./node_modules/d3-shape/src/curve/bundle.js","webpack:///./node_modules/d3-shape/src/curve/cardinal.js","webpack:///./node_modules/d3-shape/src/curve/cardinalClosed.js","webpack:///./node_modules/d3-shape/src/curve/cardinalOpen.js","webpack:///./node_modules/d3-shape/src/curve/catmullRom.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack:///./node_modules/d3-shape/src/curve/linearClosed.js","webpack:///./node_modules/d3-shape/src/curve/monotone.js","webpack:///./node_modules/d3-shape/src/curve/natural.js","webpack:///./node_modules/d3-shape/src/curve/step.js","webpack:///./node_modules/d3-shape/src/offset/none.js","webpack:///./node_modules/d3-shape/src/order/none.js","webpack:///./node_modules/d3-shape/src/stack.js","webpack:///./node_modules/d3-shape/src/offset/expand.js","webpack:///./node_modules/d3-shape/src/offset/diverging.js","webpack:///./node_modules/d3-shape/src/offset/silhouette.js","webpack:///./node_modules/d3-shape/src/offset/wiggle.js","webpack:///./node_modules/d3-shape/src/order/appearance.js","webpack:///./node_modules/d3-shape/src/order/ascending.js","webpack:///./node_modules/d3-shape/src/order/descending.js","webpack:///./node_modules/d3-shape/src/order/insideOut.js","webpack:///./node_modules/d3-shape/src/order/reverse.js","webpack:///./node_modules/d3-time-format/src/isoFormat.js","webpack:///./node_modules/d3-time-format/src/isoParse.js","webpack:///./node_modules/d3-voronoi/src/constant.js","webpack:///./node_modules/d3-voronoi/src/point.js","webpack:///./node_modules/d3-voronoi/src/RedBlackTree.js","webpack:///./node_modules/d3-voronoi/src/Edge.js","webpack:///./node_modules/d3-voronoi/src/Cell.js","webpack:///./node_modules/d3-voronoi/src/Circle.js","webpack:///./node_modules/d3-voronoi/src/Beach.js","webpack:///./node_modules/d3-voronoi/src/Diagram.js","webpack:///./node_modules/d3-voronoi/src/voronoi.js","webpack:///./node_modules/d3-zoom/src/constant.js","webpack:///./node_modules/d3-zoom/src/event.js","webpack:///./node_modules/d3-zoom/src/transform.js","webpack:///./node_modules/d3-zoom/src/noevent.js","webpack:///./node_modules/d3-zoom/src/zoom.js","webpack:///./node_modules/d3/index.js","webpack:///./src/app.js","webpack:///./src/gauge/gauge.js","webpack:///./src/gauge/bar/bar.js","webpack:///./src/gauge/pointer/pointer.js","webpack:///./src/gauge/labels/labels.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ascending","a","b","NaN","bisector","compare","f","length","x","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","bisect","pairs","array","pair","Array","cross","values0","values1","reduce","i0","i1","value0","n0","n1","values","descending","number","variance","valueof","delta","mean","sum","isNaN","deviation","v","Math","sqrt","src_extent","min","max","array_array","slice","map","constant","identity","src_range","start","stop","step","arguments","ceil","range","e10","e5","e2","ticks","count","reverse","tickIncrement","isFinite","floor","power","log","LN10","error","pow","tickStep","step0","abs","step1","sturges","LN2","src_histogram","domain","threshold","histogram","data","xz","x0","x1","tz","isArray","shift","pop","bin","bins","push","_","thresholds","quantile","freedmanDiaconis","sort","scott","src_max","src_mean","median","numbers","src_merge","arrays","merged","j","src_min","permute","indexes","permutes","scan","xi","xj","shuffle","random","src_sum","src_transpose","matrix","transpose_length","transpose","row","zip","array_slice","src_identity","axis_top","axis_right","axis_bottom","axis_left","epsilon","translateX","translateY","y","entering","this","__axis","axis_axis","orient","scale","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","k","transform","axis","context","apply","format","spacing","range0","range1","position","bandwidth","offset","round","copy","selection","path","selectAll","tick","order","tickExit","exit","tickEnter","enter","append","attr","line","select","text","merge","insert","transition","getAttribute","parentNode","remove","filter","each","tickSize","axisTop","axisRight","axisBottom","axisLeft","noop","dispatch","Error","Dispatch","type","set","callback","concat","constructor","on","typename","types","T","trim","split","indexOf","that","args","src_dispatch","xhtml","namespaces","svg","xlink","xml","xmlns","namespace","prefix","space","local","creator","fullname","ownerDocument","createElementNS","document","uri","namespaceURI","documentElement","createElement","none","src_selector","selector","querySelector","selectorAll_empty","selectorAll","querySelectorAll","matcher","matches","sparse","update","EnterNode","parent","datum","_next","_parent","__data__","appendChild","child","insertBefore","next","keyPrefix","bindIndex","group","node","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","sort_ascending","src_window","defaultView","styleValue","style","getPropertyValue","getComputedStyle","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","setAttribute","join","splice","contains","textRemove","textContent","htmlRemove","innerHTML","raise","nextSibling","lower","previousSibling","firstChild","constantNull","remove_remove","removeChild","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","on_event","mouseenter","mouseleave","filterContextListener","listener","index","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","selection_root","Selection","groups","parents","_groups","_parents","selection_selection","subgroups","subnode","subgroup","match","size","enterGroup","updateGroup","previous","_enter","_exit","onenter","onupdate","onexit","groups0","groups1","m0","m1","merges","group0","group1","compareNode","sortgroups","sortgroup","nodes","empty","getAttributeNS","removeAttributeNS","removeAttribute","setAttributeNS","priority","removeProperty","setProperty","classed","html","before","clone","deep","typenames","on_parseTypenames","src_selection","src_select","src_create","nextId","Local","toString","id","source","current","src_point","ownerSVGElement","createSVGPoint","point","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","top","clientTop","mouse","changedTouches","src_selectAll","src_touch","touches","identifier","touch","src_touches","points","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","root","__noselect","MozUserSelect","yesdrag","noclick","setTimeout","d3_drag_src_constant","DragEvent","target","subject","active","dx","dy","defaultFilter","ctrlKey","button","defaultContainer","defaultSubject","defaultTouchable","navigator","maxTouchPoints","src_drag","mousedownx","mousedowny","mousemoving","touchending","container","touchable","gestures","listeners","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","clearTimeout","sublisteners","p0","clickDistance","define","factory","extend","definition","Color","reI","reN","reP","reHex","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_formatHex","rgb","formatHex","color_formatRgb","formatRgb","color_color","toLowerCase","exec","parseInt","rgbn","Rgb","rgba","hsla","g","rgbConvert","opacity","color_rgb","rgb_formatHex","hex","rgb_formatRgb","h","Hsl","hslConvert","hsl","hsl2rgb","m2","basis","t1","v0","v1","v2","v3","t2","t3","channels","assign","displayable","formatHsl","brighter","darker","src_basis","basisClosed","d3_interpolate_src_constant","linear","color_hue","gamma","nogamma","exponential","src_rgb","rgbGamma","color","end","rgbSpline","spline","colors","rgbBasis","rgbBasisClosed","src_array","nb","na","src_value","src_date","Date","setTime","src_number","src_object","reA","reB","cssNode","cssRoot","cssView","svgNode","src_string","am","bm","bs","bi","lastIndex","q","one","string_zero","valueOf","discrete","src_hue","src_round","degrees","PI","decompose_identity","rotate","skewX","scaleX","scaleY","decompose","e","atan2","atan","interpolateTransform","parse","pxComma","pxParen","degParen","xa","ya","xb","yb","translate","interpolateTransformCss","interpolateTransformSvg","baseVal","consolidate","rho","SQRT2","zoom_cosh","exp","src_zoom","p1","S","ux0","uy0","w0","ux1","uy1","w1","d2","d1","b0","b1","r0","r1","coshr0","u","zoom_sinh","duration","hsl_hsl","hue","src_hsl","hslLong","deg2rad","rad2deg","Xn","Yn","Zn","lab_t0","lab_t1","lab_t2","labConvert","Lab","Hcl","hcl2lab","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","lch","hcl","cos","sin","lab_lab","hcl_hcl","src_hcl","hclLong","C","cubehelix_D","cubehelix_E","ED","EB","BC_DA","cubehelix_cubehelix","Cubehelix","bl","cubehelixConvert","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","cosh","sinh","src_cubehelix","cubehelixLong","piecewise_piecewise","interpolate","I","taskHead","taskTail","quantize","interpolator","samples","timer_frame","timeout","timer_interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","setFrame","requestAnimationFrame","clearNow","Timer","_call","_time","timer","delay","time","restart","timerFlush","wake","t0","Infinity","sleep","nap","poke","clearInterval","setInterval","TypeError","src_timeout","elapsed","src_interval","total","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","ease","schedule_create","schedule_init","schedule","schedule_get","schedule_set","interrupt","tweenValue","_id","transition_interpolate","selection_Selection","style_styleRemove","transition_id","Transition","_name","src_transition_transition","newId","selection_prototype","linear_linear","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","children","inherit","id0","id1","on0","on1","sit","every","on_start","onFunction","attrTween","string00","string10","interpolate0","string0","string1","value1","_value","attrInterpolateNS","attrInterpolate","styleTween","styleNull","style_styleFunction","listener0","undefined","styleMaybeRemove","style_styleConstant","styleInterpolate","text_textFunction","text_textConstant","tween0","tween1","easeConstant","Promise","resolve","reject","cancel","polyIn","custom","exponent","polyOut","polyInOut","pi","halfPi","sinIn","sinOut","sinInOut","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounce_b1","b2","b3","b4","b5","b6","b7","b8","b9","bounce_b0","bounceIn","bounceOut","bounceInOut","backIn","overshoot","backOut","backInOut","tau","elasticIn","asin","amplitude","period","elasticOut","elasticInOut","defaultTiming","transition_inherit","active_root","src_active","d3_brush_src_constant","src_event","noevent_nopropagation","src_noevent","MODE_DRAG","MODE_SPACE","MODE_HANDLE","MODE_CENTER","number1","number2","brush_X","handles","brush_type","input","output","xy","brush_Y","XY","cursors","overlay","w","nw","ne","se","sw","flipX","flipY","signsX","signsY","brush_defaultFilter","defaultExtent","hasAttribute","viewBox","width","height","brush_defaultTouchable","brush_local","__brush","brushSelection","dim","brushX","brush_brush","brushY","src_brush","extent","keys","brush","handleSize","initialize","handle","redraw","started","emitter","clean","Emitter","e0","e1","s0","s1","moving","lockX","lockY","metaKey","altKey","signX","signY","W","N","E","shifting","shiftKey","pointer","point0","emit","moved","ended","keyCode","move","point1","selection0","selection1","clear","starting","keyModifiers","math_pi","math_halfPi","math_tau","math_max","src_chord","padAngle","sortGroups","sortSubgroups","sortChords","chord","groupSums","groupIndex","subgroupIndex","chords","forEach","di","dj","a0","a1","subindex","startAngle","endAngle","src_array_slice","d3_chord_src_constant","path_pi","path_tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","path_path","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","ccw","cw","da","src_path","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","defaultEndAngle","src_ribbon","ribbon","buffer","argv","sr","sa0","sa1","sx0","sy0","tr","ta0","ta1","Map","map_map","has","entries","src_map","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","valuesByKey","result","createObject","setObject","createMap","setMap","sortKey","Set","proto","set_set","src_set","src_keys","src_values","src_entries","d3_contour_src_array_slice","src_ascending","src_area","ring","area","d3_contour_src_constant","hole","ringContains","yi","pj","yj","segmentContains","collinear","src_noop","cases","src_contours","smooth","smoothLinear","contours","contour","polygons","holes","fragmentByStart","fragmentByEnd","stitch","startIndex","endIndex","unshift","isorings","polygon","coordinates","xt","yt","_0","_1","blurX","blurY","defaultX","defaultY","defaultWeight","src_density","weight","density","Float32Array","wi","geometry","transformPolygon","transformRing","transformPoint","resize","cellSize","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","JSON","stringify","inferColumns","rows","columnSet","column","pad","formatDate","date","year","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","getUTCFullYear","getUTCMonth","getUTCDate","dsv","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","eof","eol","token","replace","preformatBody","formatValue","formatRow","test","convert","customConverter","formatBody","formatRows","csv","csvParse","csvParseRows","csvFormat","csvFormatBody","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatBody","tsvFormatRows","autoType","responseBlob","response","ok","status","statusText","blob","init","fetch","then","responseArrayBuffer","arrayBuffer","src_buffer","responseText","src_text","dsvParse","dsv_dsv","dsv_csv","dsv_tsv","src_image","image","Image","onerror","onload","src","responseJson","json","parser","DOMParser","parseFromString","xml_html","src_center","force","sx","sy","d3_force_src_constant","jiggle","add_add","tree","xm","ym","xp","yp","bottom","_root","leaf","_x","_y","src_quad","x_defaultX","y_defaultY","quadtree","Quadtree","addAll","leaf_copy","treeProto","collide_x","vx","collide_y","vy","cover","yz","visit","find","x3","y3","quads","retainer","removeAll","visitAfter","collide","radii","strength","iterations","ri","ri2","prepare","quad","rj","link_index","link_find","nodeById","nodeId","src_link","links","strengths","distances","bias","link","distance","alpha","initializeStrength","initializeDistance","simulation_x","simulation_y","initialRadius","initialAngle","src_simulation","simulation","alphaMin","alphaDecay","alphaTarget","velocityDecay","forces","stepper","fx","fy","initializeNodes","angle","initializeForce","closest","manyBody","distanceMin2","distanceMax2","theta2","accumulate","distanceMin","distanceMax","theta","radial","radiuses","d3_force_src_x","d3_force_src_y","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","align","sign","symbol","zero","comma","precision","prefixExponent","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","formatTrim","out","formatRounded","formatTypes","%","toFixed","toPrecision","X","toUpperCase","d3_format_src_identity","locale_map","prefixes","src_locale","locale","grouping","thousands","Number","substring","currencyPrefix","currency","currencySuffix","decimal","numerals","formatNumerals","String","percent","minus","nan","newFormat","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","padding","formatPrefix","defaultLocale","precisionFixed","precisionPrefix","precisionRound","adder","Adder","reset","adder_add","temp","bv","av","math_epsilon","math_epsilon2","src_math_pi","src_math_halfPi","quarterPi","src_math_tau","math_degrees","radians","math_cos","math_sin","math_sign","haversin","noop_noop","streamGeometry","stream","streamGeometryType","streamObjectType","Feature","FeatureCollection","features","Sphere","sphere","Point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area_lambda00","phi00","area_lambda0","area_cosPhi0","area_sinPhi0","src_stream","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","d3_geo_src_area","cartesian_spherical","cartesian","cartesian_cartesian","spherical","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","bounds_lambda0","bounds_phi0","bounds_lambda1","bounds_phi1","bounds_lambda2","bounds_lambda00","bounds_phi00","bounds_p0","ranges","bounds_range","deltaSum","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","bounds_linePoint","normal","inflection","phii","lambdai","antimeridian","bounds_angle","lambda0","lambda1","rangeCompare","rangeContains","W0","W1","centroid_X0","centroid_Y0","Z0","centroid_X1","centroid_Y1","Z1","X2","Y2","Z2","centroid_lambda00","centroid_phi00","centroid_x0","centroid_y0","z0","bounds","feature","deltaMax","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","src_centroid","d3_geo_src_constant","compose","invert","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","src_rotation","forward","circleStream","direction","cosRadius","sinRadius","circleRadius","src_circle","center","circle","clip_buffer","lines","rejoin","pointEqual","Intersection","other","entry","segments","compareIntersection","startInside","clip","segment","rejoin_link","isSubject","polygonContains_sum","longitude","polygonContains","winding","phi0","sinPhi0","cosPhi0","sinPhi1","cosPhi1","phi1","absDelta","intersection","phiArc","src_clip","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","clip_compareIntersection","pointLine","ringSegments","validSegment","clip_antimeridian","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","from","to","clip_circle","cr","smallRadius","notHemisphere","visible","intersect","two","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","uu","polar","q1","code","c0","v00","point2","clip_line","ax","ay","clipMax","clipMin","clipRectangle","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","polygonInside","cleanInside","length_lambda0","length_sinPhi0","length_cosPhi0","clip_extent","cache","cacheStream","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","src_length","distance_coordinates","distance_object","src_distance","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ao","bo","ab","ringRadians","pointRadians","src_contains","graticuleX","graticuleY","graticule_graticule","X1","X0","Y1","Y0","Y","DX","DY","graticule","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","area_x00","area_y00","area_x0","area_y0","src_interpolate","cy0","cy1","sy1","kx0","ky0","kx1","ky1","B","d3_geo_src_identity","area_areaSum","area_areaRingSum","area_areaStream","area_areaRingStart","area_areaRingEnd","area_areaPointFirst","area_areaPoint","path_area","bounds_x0","bounds_y0","bounds_x1","bounds_y1","centroid_x00","centroid_y00","path_centroid_x0","path_centroid_y0","path_bounds","path_centroid_X0","path_centroid_Y0","centroid_Z0","path_centroid_X1","path_centroid_Y1","centroid_Z1","centroid_X2","centroid_Y2","centroid_Z2","centroid_centroidStream","centroid_centroidPoint","centroid_centroidLineStart","centroid_centroidLineEnd","centroid_centroidRingStart","centroid_centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","path_centroid","PathContext","_context","_radius","pointRadius","_line","_point","lengthRing","measure_x00","measure_y00","measure_x0","measure_y0","measure_lengthSum","measure_lengthStream","measure_lengthPointFirst","measure_lengthPoint","measure","PathString","_string","string_circle","_circle","d3_geo_src_path","projection","projectionStream","contextStream","src_transform","methods","transformer","TransformStream","fit","fitBounds","clipExtent","fitExtent","fitSize","fitWidth","fitHeight","maxDepth","cosMinDistance","resample","project","delta2","resampleLineTo","phi2","lambda2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resample_resample","resampleNone","transformRadians","scaleTranslateRotate","cosAlpha","sinAlpha","ai","ci","fi","projection_projection","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","preclip","postclip","recenter","transformRotate","clipAngle","conicProjection","parallels","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0y","conicEqualArea","albers","projection_albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","streams","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercatorRaw","mercator","mercatorProjection","reclip","tany","conicConformalRaw","conicConformal","equirectangularRaw","equirectangular","conicEquidistantRaw","gy","nx","conicEquidistant","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","equalEarth","gnomonicRaw","gnomonic","identity_scaleTranslate","kx","ky","tx","ty","projection_identity","reflectX","reflectY","naturalEarth1Raw","phi4","naturalEarth1","orthographicRaw","orthographic","stereographicRaw","stereographic","transverseMercatorRaw","transverseMercator","defaultSeparation","meanXReduce","maxYReduce","cluster","separation","nodeSize","previousNode","eachAfter","meanX","maxY","leafLeft","leafRight","count_count","hierarchy","childs","Node","valued","defaultChildren","eachBefore","computeHeight","copyData","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","descendants","leaves","d3_hierarchy_src_array_slice","enclose","circles","array_shuffle","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","r2","r21","r3","a2","a3","c3","d3","place","intersects","score","siblings_Node","packEnclose","aa","sj","sk","pack","siblings","required","constantZero","d3_hierarchy_src_constant","pack_defaultRadius","src_pack","radiusLeaf","packChildren","translateChild","treemap_round","dice","src_partition","partition","positionNode","stratify_keyPrefix","preroot","ambiguous","defaultId","defaultParentId","parentId","src_stratify","stratify","nodeKey","nodeByKey","tree_defaultSeparation","nextLeft","nextRight","moveSubtree","wm","wp","change","nextAncestor","vim","TreeNode","src_tree","treeRoot","firstWalk","secondWalk","sizeNode","executeShifts","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","treemap_slice","squarify_phi","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","squarify","src_treemap","tile","paddingStack","paddingInner","paddingTop","paddingRight","paddingBottom","paddingLeft","treemap","paddingOuter","binary","sums","valueOffset","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","treemap_resquarify","resquarify","_squarify","d3_polygon_src_area","d3_polygon_src_centroid","src_cross","lexicographicOrder","computeUpperHullIndexes","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","d3_polygon_src_contains","inside","d3_polygon_src_length","perimeter","src_defaultSource","uniform","sourceRandomUniform","randomUniform","src_normal","sourceRandomNormal","randomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","src_exponential","sourceRandomExponential","randomExponential","initRange","initInterpolator","d3_scale_src_array_array","array_map","d3_scale_src_array_slice","implicit","ordinal","unknown","band","ordinalRange","rescale","rangeRound","band_point","pointish","d3_scale_src_constant","d3_scale_src_number","unit","continuous_identity","normalize","clamper","bimap","d0","polymap","clamp","continuous_transformer","untransform","piecewise","continuous","src_tickFormat","linearish","nice","src_linear_linear","identity_identity","interval","transformLog","transformExp","transformLogn","transformExpn","pow10","reflect","loggish","logs","pows","base","log10","log2","logp","powp","log_log","transformSymlog","log1p","transformSymexp","expm1","symlogish","symlog","transformPow","transformSqrt","transformSquare","powish","pow_pow","pow_sqrt","quantile_quantile","invertExtent","quantiles","quantize_quantize","threshold_threshold","interval_t0","interval_t1","newInterval","floori","offseti","field","year_year","setMonth","setHours","setFullYear","getFullYear","src_year","years","month_month","setDate","getMonth","src_month","months","durationMinute","durationWeek","weekday","getDate","getDay","getTimezoneOffset","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","day_day","src_day","days","hour_hour","getMilliseconds","getSeconds","getMinutes","getHours","src_hour","minute_minute","src_minute","second_second","src_second","millisecond_millisecond","src_millisecond","utcWeekday","setUTCDate","getUTCDay","setUTCHours","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcDay","src_utcDay","utcDays","utcYear","setUTCMonth","setUTCFullYear","src_utcYear","utcYears","localDate","H","L","utcDate","UTC","newDate","formatLocale","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","locale_shortWeekdays","shortDays","locale_months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","Q","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","U","formatWeekNumberSunday","V","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","locale_formatYear","formatFullYear","Z","formatZone","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseSpecifier","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseQuarter","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","pads","charAt","newParse","week","day","utcFormat","utcParse","src_defaultLocale_locale","timeFormat","timeParse","-","0","numberRe","percentRe","requoteRe","locale_pad","requote","dow","defaultLocale_defaultLocale","time_durationSecond","time_durationMinute","time_durationHour","time_durationDay","time_durationWeek","durationMonth","durationYear","time_date","time_number","calendar","month","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","tickInterval","src_time","utcMonth","src_utcMonth","utcMonths","utcHour","setUTCMinutes","src_utcHour","utcHours","utcMinute","setUTCSeconds","src_utcMinute","utcMinutes","utcTime","sequential_transformer","k10","sequential_copy","sequential","sequentialLog","sequentialSymlog","sequentialPow","sequentialSqrt","sequentialQuantile","diverging_transformer","k21","diverging","divergingLog","divergingSymlog","divergingPow","divergingSqrt","src_colors","category10","Accent","Dark2","Paired","Pastel1","Pastel2","Set1","Set2","Set3","Tableau10","ramp","scheme","BrBG_scheme","BrBG","PRGn_scheme","PRGn","PiYG_scheme","PiYG","PuOr_scheme","PuOr","RdBu_scheme","RdBu","RdGy_scheme","RdGy","RdYlBu_scheme","RdYlBu","RdYlGn_scheme","RdYlGn","Spectral_scheme","Spectral","BuGn_scheme","BuGn","BuPu_scheme","BuPu","GnBu_scheme","GnBu","OrRd_scheme","OrRd","PuBuGn_scheme","PuBuGn","PuBu_scheme","PuBu","PuRd_scheme","PuRd","RdPu_scheme","RdPu","YlGnBu_scheme","YlGnBu","YlGn_scheme","YlGn","YlOrBr_scheme","YlOrBr","YlOrRd_scheme","YlOrRd","Blues_scheme","Blues","Greens_scheme","Greens","Greys_scheme","Greys","Purples_scheme","Purples","Reds_scheme","Reds","Oranges_scheme","Oranges","cividis","sequential_multi_cubehelix","warm","cool","rainbow_c","rainbow","ts","sinebow_c","pi_1_3","pi_2_3","sinebow","turbo","viridis_ramp","viridis","magma","inferno","plasma","d3_shape_src_constant","math_abs","math_atan2","src_math_cos","src_math_max","math_min","src_math_sin","math_sqrt","src_math_epsilon","d3_shape_src_math_pi","d3_shape_src_math_halfPi","d3_shape_src_math_tau","math_asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","D","cx0","cx1","dx0","dy0","dx1","dy1","src_arc","cornerRadius","padRadius","a01","a11","a10","da0","da1","ap","rp","rc0","rc1","oc","x32","y32","arc_intersect","bx","by","kc","lc","Linear","areaStart","areaEnd","curve_linear","point_x","point_y","src_line","defined","curve","defined0","d3_shape_src_area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","src_pie","pie","arcs","pa","curveRadialLinear","curveRadial","Radial","_curve","lineRadial","src_lineRadial","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","pointRadial","d3_shape_src_array_slice","linkSource","linkTarget","link_link","curveHorizontal","curveVertical","link_curveRadial","p2","p3","linkHorizontal","linkVertical","linkRadial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","star_kx","star_ky","star","square","sqrt3","triangle","wye_s","wye_k","wye_a","wye","symbols","src_symbol","d3_shape_src_noop","basis_point","Basis","curve_basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","curve_basisClosed","BasisOpen","basisOpen","Bundle","_basis","_beta","curve_bundle","bundle","cardinal_point","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","cardinalClosed","CardinalOpen","cardinalOpen","catmullRom_point","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","catmullRomClosed","CatmullRomOpen","catmullRomOpen","LinearClosed","linearClosed","monotone_sign","slope3","h0","h1","slope2","monotone_point","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","_t0","px","py","natural","Step","_t","curve_step","stepBefore","stepAfter","offset_none","series","order_none","stackValue","src_stack","stack","oz","kz","sz","sij","ki","si","expand","offset_diverging","yn","silhouette","wiggle","s2","sij0","s3","appearance","peaks","peak","vi","vj","order_ascending","ascending_sum","order_descending","insideOut","tops","bottoms","order_reverse","isoFormat","toISOString","isoParse","d3_voronoi_src_constant","src_point_x","src_point_y","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","sibling","src_RedBlackTree","createEdge","edge","Diagram_edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","connectEdge","fm","fb","lx","ly","rx","ry","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","Circle","attachCircle","lArc","rArc","lSite","cSite","rSite","Diagram_epsilon2","ha","hc","Diagram_circles","detachCircle","beachPool","Beach","createBeach","beach","detachBeach","beaches","removeBeach","disappearing","Diagram_epsilon","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","lexicographic","Diagram","sites","sortCellHalfedges","clipEdges","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","dc","v01","v11","v10","clipCells","edges","triangles","_found","src_voronoi","voronoi","d3_zoom_src_constant","ZoomEvent","Transform","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","transform_identity","transform_transform","__zoom","src_noevent_nopropagation","d3_zoom_src_noevent","zoom_defaultFilter","zoom_defaultExtent","SVGElement","clientWidth","clientHeight","defaultTransform","defaultWheelDelta","deltaY","deltaMode","zoom_defaultTouchable","defaultConstrain","translateExtent","d3_zoom_src_zoom","touchstarting","constrain","wheelDelta","scaleExtent","touchDelay","wheelDelay","zoom","wheeled","dblclicked","__zooming","Gesture","taps","wheel","k1","touch0","touch1","l0","l1","dp","dl","collection","scaleBy","scaleTo","translateBy","translateTo","__webpack_exports__","Gauge","createGauge","config","flag","powerGauge","updateReadings","newValue","updateBar","updateLabels","render","clipWidth","clipHeight","ringWidth","transitionMs","majorTicks","minAngle","maxAngle","Bar","Pointer","Labels","[object Object]","configuration","ringInset","pointerWidth","pointerTailLength","pointerHeadLengthPercent","labelFormat","labelInset","arcColorFn","interpolateHsl","pointerHeadLength","foregroundArc","backgroundArc","tickData","cur_color","oR","iR","donut","scaleLinear","configure","redBar","orangeBar","changeTextColor","formatTicks","deg","rad","prop","parentSvg","centerTranslation","labels","newMax","newMin","cur_text_color","new_text_color","currentFontSize","barArc","createGaugeArc","svgRenderedArc","addArcToSvgParent","renderMax","renderMin","numb","yOffset","centerTextTranslation","numPiEnd","convertScaleToRadians","numPiStart","diff","startAndEnd","new_color","rounder","chanceColor","newAngle","startInterpolate","endInterpolate","hold","hold_text","createScale","renderCurrent","pointerLine","makePointerLine","pg","curveMonotoneX","lineData","easeElastic","oldTicks","rejects","lg","createLabelArc","centerTx","console","createLabels","newScale","newTicks","el","includes","moveCurrentLabels","removeOldLabels"],"mappings":"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","file":"gauge.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export var name = \"d3\";\nexport var version = \"5.12.0\";\nexport var description = \"Data-Driven Documents\";\nexport var keywords = [\"dom\",\"visualization\",\"svg\",\"animation\",\"canvas\"];\nexport var homepage = \"https://d3js.org\";\nexport var license = \"BSD-3-Clause\";\nexport var author = {\"name\":\"Mike Bostock\",\"url\":\"https://bost.ocks.org/mike\"};\nexport var main = \"dist/d3.node.js\";\nexport var unpkg = \"dist/d3.min.js\";\nexport var jsdelivr = \"dist/d3.min.js\";\nexport var module = \"index.js\";\nexport var repository = {\"type\":\"git\",\"url\":\"https://github.com/d3/d3.git\"};\nexport var files = [\"dist/**/*.js\",\"index.js\"];\nexport var scripts = {\"pretest\":\"rimraf dist && mkdir dist && json2module package.json > dist/package.js && rollup -c\",\"test\":\"tape 'test/**/*-test.js'\",\"prepublishOnly\":\"yarn test\",\"postpublish\":\"git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \\\"d3 ${npm_package_version}\\\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \\\"${npm_package_version}\\\" && git tag -am \\\"${npm_package_version}\\\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js\"};\nexport var devDependencies = {\"json2module\":\"0.0\",\"rimraf\":\"2\",\"rollup\":\"1\",\"rollup-plugin-ascii\":\"0.0\",\"rollup-plugin-node-resolve\":\"3\",\"rollup-plugin-terser\":\"5\",\"tape\":\"4\"};\nexport var dependencies = {\"d3-array\":\"1\",\"d3-axis\":\"1\",\"d3-brush\":\"1\",\"d3-chord\":\"1\",\"d3-collection\":\"1\",\"d3-color\":\"1\",\"d3-contour\":\"1\",\"d3-dispatch\":\"1\",\"d3-drag\":\"1\",\"d3-dsv\":\"1\",\"d3-ease\":\"1\",\"d3-fetch\":\"1\",\"d3-force\":\"1\",\"d3-format\":\"1\",\"d3-geo\":\"1\",\"d3-hierarchy\":\"1\",\"d3-interpolate\":\"1\",\"d3-path\":\"1\",\"d3-polygon\":\"1\",\"d3-quadtree\":\"1\",\"d3-random\":\"1\",\"d3-scale\":\"2\",\"d3-scale-chromatic\":\"1\",\"d3-selection\":\"1\",\"d3-shape\":\"1\",\"d3-time\":\"1\",\"d3-time-format\":\"2\",\"d3-timer\":\"1\",\"d3-transition\":\"1\",\"d3-voronoi\":\"1\",\"d3-zoom\":\"1\"};\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","export default function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n","import variance from \"./variance\";\n\nexport default function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return x;\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import {slice} from \"./array\";\nimport bisect from \"./bisect\";\nimport constant from \"./constant\";\nimport extent from \"./extent\";\nimport identity from \"./identity\";\nimport range from \"./range\";\nimport {tickStep} from \"./ticks\";\nimport sturges from \"./threshold/sturges\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import {map} from \"../array\";\nimport ascending from \"../ascending\";\nimport number from \"../number\";\nimport quantile from \"../quantile\";\n\nexport default function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n","import deviation from \"../deviation\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n","import ascending from \"./ascending\";\nimport number from \"./number\";\nimport quantile from \"./quantile\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n","export default function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n","import ascending from \"./ascending\";\n\nexport default function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n","export default function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n","import min from \"./min\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","import transpose from \"./transpose\";\n\nexport default function() {\n  return transpose(arguments);\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"currentColor\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? (tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter : \"M0.5,\" + range0 + \"V\" + range1)\n            : (tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",0.5H\" + range1));\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_join from \"./join\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","import creator from \"./creator\";\nimport select from \"./select\";\n\nexport default function(name) {\n  return select(creator(name).call(document.documentElement));\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent.js\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\nimport constant from \"./constant.js\";\nimport DragEvent from \"./event.js\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? new Rgb(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? new Rgb((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n","import {hue} from \"./color\";\n\nexport default function(a, b) {\n  var i = hue(+a, +b);\n  return function(t) {\n    var x = i(t);\n    return x - 360 * Math.floor(x / 360);\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb} from \"./color.js\";\nimport {deg2rad, rad2deg} from \"./math.js\";\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * deg2rad;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return hcl2lab(this).rgb();\n  }\n}));\n","import {lab as colorLab} from \"d3-color\";\nimport color from \"./color\";\n\nexport default function lab(start, end) {\n  var l = color((start = colorLab(start)).l, (end = colorLab(end)).l),\n      a = color(start.a, end.a),\n      b = color(start.b, end.b),\n      opacity = color(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color.js\";\nimport {deg2rad, rad2deg} from \"./math.js\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {Timer, now} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\nimport transition_end from \"./end\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  end: transition_end\n};\n","export function linear(t) {\n  return +t;\n}\n","export function quadIn(t) {\n  return t * t;\n}\n\nexport function quadOut(t) {\n  return t * (2 - t);\n}\n\nexport function quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i(t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i(t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i(t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {set} from \"./schedule\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n  });\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","export function expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nexport function expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nexport function expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {Transition} from \"./transition/index\";\nimport {SCHEDULED} from \"./transition/schedule\";\n\nvar root = [null];\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {customEvent, event, touch, mouse, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport BrushEvent from \"./event.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nfunction number1(e) {\n  return [+e[0], +e[1]];\n}\n\nfunction number2(e) {\n  return [number1(e[0]), number1(e[1])];\n}\n\nfunction toucher(identifier) {\n  return function(target) {\n    return touch(target, event.touches, identifier);\n  };\n}\n\nvar X = {\n  name: \"x\",\n  handles: [\"w\", \"e\"].map(type),\n  input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"w\", \"e\", \"s\", \"nw\", \"ne\", \"sw\", \"se\"].map(type),\n  input: function(xy) { return xy == null ? null : number2(xy); },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  if (svg.hasAttribute(\"viewBox\")) {\n    svg = svg.viewBox.baseVal;\n    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\n  }\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      touchable = defaultTouchable,\n      keys = true,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .on(\"mousedown.brush\", started)\n      .filter(touchable)\n        .on(\"touchstart.brush\", started)\n        .on(\"touchmove.brush\", touchmoved)\n        .on(\"touchend.brush touchcancel.brush\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && selection1 === null ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 !== null && selection1 !== null ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 === null ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  brush.clear = function(group) {\n    brush.move(group, null);\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args, clean) {\n    return (!clean && that.__brush.emitter) || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      else this.emit(\"brush\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (touchending && !event.touches) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (keys && event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (keys && event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx = 0,\n        dy = 0,\n        moving,\n        shifting = signX && signY && keys && event.shiftKey,\n        lockX,\n        lockY,\n        pointer = event.touches ? toucher(event.changedTouches[0].identifier) : mouse,\n        point0 = pointer(that),\n        point = point0,\n        emit = emitter(that, arguments, true).beforestart();\n\n    if (type === \"overlay\") {\n      if (selection) moving = true;\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      emit.moved = moved;\n      emit.ended = ended;\n    } else {\n      var view = select(event.view)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n      if (keys) view\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n\n      dragDisable(event.view);\n    }\n\n    nopropagation();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = pointer(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function touchmoved() {\n    emitter(this, arguments).moved();\n  }\n\n  function touchended() {\n    emitter(this, arguments).ended();\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = number2(extent.apply(this, arguments));\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant(number2(_)), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.keyModifiers = function(_) {\n    return arguments.length ? (keys = !!_, brush) : keys;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","export var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\n","import {range} from \"d3-array\";\nimport {max, tau} from \"./math\";\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport {cos, halfPi, sin} from \"./math\";\nimport {path} from \"d3-path\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nexport default function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","export default function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n","export default function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n","export default function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\n","export default function(a, b) {\n  return a - b;\n}\n","export default function(ring) {\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n","export default function() {}\n","import {extent, thresholdSturges, tickStep, range} from \"d3-array\";\nimport {slice} from \"./array\";\nimport ascending from \"./ascending\";\nimport area from \"./area\";\nimport constant from \"./constant\";\nimport contains from \"./contains\";\nimport noop from \"./noop\";\n\nvar cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      threshold = thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var domain = extent(values), start = domain[0], stop = domain[1];\n      tz = tickStep(start, stop, tz);\n      tz = range(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\n    } else {\n      tz = tz.slice().sort(ascending);\n    }\n\n    return tz.map(function(value) {\n      return contour(values, value);\n    });\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, function(ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 > 0) || !(_1 > 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n","// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurX(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var j = 0; j < m; ++j) {\n    for (var i = 0, sr = 0; i < n + r; ++i) {\n      if (i < n) {\n        sr += source.data[i + j * n];\n      }\n      if (i >= r) {\n        if (i >= w) {\n          sr -= source.data[i - w + j * n];\n        }\n        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n      }\n    }\n  }\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurY(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var i = 0; i < n; ++i) {\n    for (var j = 0, sr = 0; j < m + r; ++j) {\n      if (j < m) {\n        sr += source.data[i + j * n];\n      }\n      if (j >= r) {\n        if (j >= w) {\n          sr -= source.data[i + (j - w) * n];\n        }\n        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n      }\n    }\n  }\n}\n","import {max, range, tickStep} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {blurX, blurY} from \"./blur\";\nimport constant from \"./constant\";\nimport contours from \"./contours\";\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nexport default function() {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n\n    data.forEach(function(d, i, data) {\n      var xi = (+x(d, i, data) + o) >> k,\n          yi = (+y(d, i, data) + o) >> k,\n          wi = +weight(d, i, data);\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += wi;\n      }\n    });\n\n    // TODO Optimize.\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n\n    var tz = threshold(values0);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var stop = max(values0);\n      tz = tickStep(0, stop, tz);\n      tz = range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours()\n        .thresholds(tz)\n        .size([n, m])\n      (values0)\n        .map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.weight = function(_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\n","export default function autoType(object) {\n  for (var key in object) {\n    var value = object[key].trim(), number;\n    if (!value) value = null;\n    else if (value === \"true\") value = true;\n    else if (value === \"false\") value = false;\n    else if (value === \"NaN\") value = NaN;\n    else if (!isNaN(number = +value)) value = number;\n    else if (/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/.test(value)) value = new Date(value);\n    else continue;\n    object[key] = value;\n  }\n  return object;\n}\n","function responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.blob();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n","function responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","export default function(input, init) {\n  return new Promise(function(resolve, reject) {\n    var image = new Image;\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function() { resolve(image); };\n    image.src = input;\n  });\n}\n","function responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.json();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n","import text from \"./text\";\n\nfunction parser(type) {\n  return function(input, init)  {\n    return text(input, init).then(function(text) {\n      return (new DOMParser).parseFromString(text, type);\n    });\n  };\n}\n\nexport default parser(\"application/xml\");\n\nexport var html = parser(\"text/html\");\n\nexport var svg = parser(\"image/svg+xml\");\n","export default function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n","export default function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add\";\nimport tree_cover from \"./cover\";\nimport tree_data from \"./data\";\nimport tree_extent from \"./extent\";\nimport tree_find from \"./find\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove\";\nimport tree_root from \"./root\";\nimport tree_size from \"./size\";\nimport tree_visit from \"./visit\";\nimport tree_visitAfter from \"./visitAfter\";\nimport tree_x, {defaultX} from \"./x\";\nimport tree_y, {defaultY} from \"./y\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {map} from \"d3-collection\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {map} from \"d3-collection\";\nimport {timer} from \"d3-timer\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.each(function (force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\nimport {x, y} from \"./simulation\";\n\nexport default function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"],\n  minus: \"-\"\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"-\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import {asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {abs, asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sign, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi)\n    return point[0];\n  else\n    return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian\";\nimport {circleStream} from \"../circle\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {abs, epsilon} from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipRejoin from \"./rejoin\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","import clipRectangle from \"./rectangle\";\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n","import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import length from \"./length\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import {default as polygonContains} from \"./polygonContains\";\nimport {default as distance} from \"./distance\";\nimport {epsilon2, radians} from \"./math\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ao, bo, ab;\n  for (var i = 0, n = coordinates.length; i < n; i++) {\n    bo = distance(coordinates[i], point);\n    if (bo === 0) return true;\n    if (i > 0) {\n      ab = distance(coordinates[i], coordinates[i - 1]);\n      if (\n        ab > 0 &&\n        ao <= ab &&\n        bo <= ab &&\n        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab\n      )\n        return true;\n    }\n    ao = bo;\n  }\n  return false;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","export default function(x) {\n  return x;\n}\n","import noop from \"../noop\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math\";\nimport noop from \"../noop\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {degrees, pi, radians} from \"../math\";\nimport {projectionMutator} from \"./index\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {abs, asin, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import conicEqualArea from \"./conicEqualArea\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import {epsilon} from \"../math\";\nimport albers from \"./albers\";\nimport conicEqualArea from \"./conicEqualArea\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import {abs, atan, atan2, cos, epsilon, halfPi, log, pow, sign, sin, sqrt, tan} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {mercatorRaw} from \"./mercator\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n","import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {equirectangularRaw} from \"./equirectangular\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import clipRectangle from \"../clip/rectangle\";\nimport identity from \"../identity\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    },\n    fitWidth: function(width, object) {\n      return fitWidth(projection, width, object);\n    },\n    fitHeight: function(height, object) {\n      return fitHeight(projection, height, object);\n    }\n  };\n}\n","import projection from \"./index\";\nimport {abs, epsilon} from \"../math\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math\";\nimport {mercatorProjection} from \"./mercator\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","function defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count\";\nimport node_each from \"./each\";\nimport node_eachBefore from \"./eachBefore\";\nimport node_eachAfter from \"./eachAfter\";\nimport node_sum from \"./sum\";\nimport node_sort from \"./sort\";\nimport node_path from \"./path\";\nimport node_ancestors from \"./ancestors\";\nimport node_descendants from \"./descendants\";\nimport node_leaves from \"./leaves\";\nimport node_links from \"./links\";\n\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n","export default function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export var slice = Array.prototype.slice;\n\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","import {shuffle, slice} from \"../array\";\n\nexport default function(circles) {\n  var i = 0, n = (circles = shuffle(slice.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","import enclose from \"./enclose\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packEnclose(circles);\n  return circles;\n}\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {packEnclose} from \"./siblings\";\nimport {optional} from \"../accessors\";\nimport constant, {constantZero} from \"../constant\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import roundNode from \"./treemap/round\";\nimport treemapDice from \"./treemap/dice\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n","import {required} from \"./accessors\";\nimport {Node, computeHeight} from \"./hierarchy/index\";\n\nvar keyPrefix = \"$\", // Protect against keys like “__proto__”.\n    preroot = {depth: -1},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nexport default function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n","import {Node} from \"./hierarchy/index\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import roundNode from \"./round\";\nimport squarify from \"./squarify\";\nimport {required} from \"../accessors\";\nimport constant, {constantZero} from \"../constant\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","import dice from \"./dice\";\nimport slice from \"./slice\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\nimport {phi, squarifyRatio} from \"./squarify\";\n\nexport default (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n","// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nexport default function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n","import cross from \"./cross\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n","export default function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}\n","export default function() {\n  return Math.random();\n}\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport normal from \"./normal\";\n\nexport default (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport irwinHall from \"./irwinHall\";\n\nexport default (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.interpolator(domain); break;\n    default: this.interpolator(interpolator).domain(domain); break;\n  }\n  return this;\n}\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\nimport {initRange} from \"./init\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal() {\n  var index = map(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport {initRange} from \"./init\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(domain) {\n  var a = domain[0], b = domain[domain.length - 1], t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), clamp === identity || (clamp = clamper(domain)), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? clamper(domain) : identity, scale) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous(transform, untransform) {\n  return transformer()(transform, untransform);\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy, identity} from \"./continuous\";\nimport {initRange} from \"./init\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(identity, identity);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity(domain) {\n  var unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return identity(domain).unknown(unknown);\n  };\n\n  domain = arguments.length ? map.call(domain, number) : [0, 1];\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport nice from \"./nice\";\nimport {copy, transformer} from \"./continuous\";\nimport {initRange} from \"./init\";\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport function loggish(transform) {\n  var scale = transform(transformLog, transformExp),\n      domain = scale.domain,\n      base = 10,\n      logs,\n      pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  return scale;\n}\n\nexport default function log() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, log()).base(scale.base());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import {linearish} from \"./linear\";\nimport {copy, transformer} from \"./continuous\";\nimport {initRange} from \"./init\";\n\nfunction transformSymlog(c) {\n  return function(x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function(x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nexport function symlogish(transform) {\n  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function(_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\n\nexport default function symlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import {linearish} from \"./linear\";\nimport {copy, identity, transformer} from \"./continuous\";\nimport {initRange} from \"./init\";\n\nfunction transformPow(exponent) {\n  return function(x) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  };\n}\n\nfunction transformSqrt(x) {\n  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n}\n\nfunction transformSquare(x) {\n  return x < 0 ? -x * x : x * x;\n}\n\nexport function powish(transform) {\n  var scale = transform(identity, identity),\n      exponent = 1;\n\n  function rescale() {\n    return exponent === 1 ? transform(identity, identity)\n        : exponent === 0.5 ? transform(transformSqrt, transformSquare)\n        : transform(transformPow(exponent), transformPow(1 / exponent));\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, rescale()) : exponent;\n  };\n\n  return linearish(scale);\n}\n\nexport default function pow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, pow()).exponent(scale.exponent());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nexport function sqrt() {\n  return pow.apply(null, arguments).exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {initRange} from \"./init\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [],\n      unknown;\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\nimport {initRange} from \"./init\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1],\n      unknown;\n\n  function scale(x) {\n    return x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : scale;\n  };\n\n  scale.thresholds = function() {\n    return domain.slice();\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(linearish(scale), arguments);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {initRange} from \"./init\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      unknown,\n      n = 1;\n\n  function scale(x) {\n    return x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;\n  }\n\n  interval.floor = function(date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval.js\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval.js\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval.js\";\nimport {durationMinute, durationWeek} from \"./duration.js\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval.js\";\nimport {durationDay, durationMinute} from \"./duration.js\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval.js\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration.js\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval.js\";\nimport {durationMinute, durationSecond} from \"./duration.js\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval.js\";\nimport {durationSecond} from \"./duration.js\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval.js\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","import interval from \"./interval.js\";\nimport {durationWeek} from \"./duration.js\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval.js\";\nimport {durationDay} from \"./duration.js\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval.js\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newDate(y, m, d) {\n  return {y: y, m: m, d: d, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"q\": formatQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"q\": formatUTCQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"q\": parseQuarter,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, Z) {\n    return function(string) {\n      var d = newDate(1900, undefined, 1),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n      if (\"s\" in d) return new Date(d.s * 1000 + (\"L\" in d ? d.L : 0));\n\n      // If this is utcParse, never use the local timezone.\n      if (Z && !(\"Z\" in d)) d.Z = 0;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // If the month was not specified, inherit from the quarter.\n      if (d.m === undefined) d.m = \"q\" in d ? d.q : 0;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return localDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatQuarter(d) {\n    return 1 + ~~(d.getMonth() / 3);\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  function formatUTCQuarter(d) {\n    return 1 + ~~(d.getUTCMonth() / 3);\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", false);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier += \"\", true);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseQuarter(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.s = +n[0], i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d) - 1, d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d) - 1, d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d) - 1, d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d) - 1, d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {bisector, tickStep} from \"d3-array\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport continuous, {copy, identity} from \"./continuous\";\nimport {initRange} from \"./init\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(identity, identity),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return initRange.apply(calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n","import interval from \"./interval.js\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval.js\";\nimport {durationHour} from \"./duration.js\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval.js\";\nimport {durationMinute} from \"./duration.js\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import {calendar} from \"./time\";\nimport {utcFormat} from \"d3-time-format\";\nimport {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond} from \"d3-time\";\nimport {initRange} from \"./init\";\n\nexport default function() {\n  return initRange.apply(calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);\n}\n","import {identity} from \"./continuous\";\nimport {initInterpolator} from \"./init\";\nimport {linearish} from \"./linear\";\nimport {loggish} from \"./log\";\nimport {symlogish} from \"./symlog\";\nimport {powish} from \"./pow\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 1,\n      t0,\n      t1,\n      k10,\n      transform,\n      interpolator = identity,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .interpolator(source.interpolator())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport default function sequential() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialLog() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n","import {ascending, bisect} from \"d3-array\";\nimport {identity} from \"./continuous\";\nimport {initInterpolator} from \"./init\";\n\nexport default function sequentialQuantile() {\n  var domain = [],\n      interpolator = identity;\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return interpolator((bisect(domain, x) - 1) / (domain.length - 1));\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return scale;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequentialQuantile(interpolator).domain(domain);\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n","import {identity} from \"./continuous\";\nimport {initInterpolator} from \"./init\";\nimport {linearish} from \"./linear\";\nimport {loggish} from \"./log\";\nimport {copy} from \"./sequential\";\nimport {symlogish} from \"./symlog\";\nimport {powish} from \"./pow\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      t0,\n      t1,\n      t2,\n      k10,\n      k21,\n      interpolator = identity,\n      transform,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (x < t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), t2 = transform(x2 = +_[2]), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1);\n    return scale;\n  };\n}\n\nexport default function diverging() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, diverging());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingLog() {\n  var scale = loggish(transformer()).domain([0.1, 1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, divergingLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSqrt() {\n  return divergingPow.apply(null, arguments).exponent(0.5);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors.js\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","export default function(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67)))))))\n      + \")\";\n}\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","export default function(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66)))))))\n      + \")\";\n}\n","import colors from \"../colors.js\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport area from \"./area\";\nimport {lineRadial} from \"./lineRadial\"\n\nexport default function() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n","export default function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n","export var slice = Array.prototype.slice;\n","import {path} from \"d3-path\";\nimport {slice} from \"../array\";\nimport constant from \"../constant\";\nimport {x as pointX, y as pointY} from \"../point\";\nimport pointRadial from \"../pointRadial\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var peaks = series.map(peak);\n  return none(series).sort(function(a, b) { return peaks[a] - peaks[b]; });\n}\n\nfunction peak(series) {\n  var i = -1, j = 0, n = series.length, vi, vj = -Infinity;\n  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;\n  return j;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","import appearance from \"./appearance\";\nimport {sum} from \"./ascending\";\n\nexport default function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = appearance(series),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  return none(series).reverse();\n}\n","import {utcFormat} from \"./defaultLocale.js\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat.js\";\nimport {utcParse} from \"./defaultLocale.js\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\n  return node.__zoom;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport ZoomEvent from \"./event.js\";\nimport {Transform, identity} from \"./transform.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    if (e.hasAttribute(\"viewBox\")) {\n      e = e.viewBox.baseVal;\n      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];\n    }\n    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];\n  }\n  return [[0, 0], [e.clientWidth, e.clientHeight]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta() {\n  return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002);\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform, point) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform, point);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k, p) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    }, p);\n  };\n\n  zoom.scaleTo = function(selection, k, p) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p,\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    }, p);\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y, p) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p;\n      return constrain(identity.translate(p0[0], p0[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    }, p);\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, point) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = point == null ? centroid(e) : typeof point === \"function\" ? point.apply(that, args) : point,\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args, clean) {\n    return (!clean && that.__zooming) || new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n    this.taps = 0;\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.that.__zooming = this;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        delete this.that.__zooming;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments, true),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent();\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.touches,\n        n = touches.length,\n        g = gesture(this, arguments, event.changedTouches.length === n),\n        started, i, t, p;\n\n    nopropagation();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;\n      else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;\n    }\n\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\n    if (started) {\n      if (g.taps < 2) touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    if (!this.__zooming) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    g.taps = 0;\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    if (!this.__zooming) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else {\n      g.end();\n      // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.\n      if (g.taps === 2) {\n        var p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n      }\n    }\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n","export {version} from \"./dist/package.js\";\nexport * from \"d3-array\";\nexport * from \"d3-axis\";\nexport * from \"d3-brush\";\nexport * from \"d3-chord\";\nexport * from \"d3-collection\";\nexport * from \"d3-color\";\nexport * from \"d3-contour\";\nexport * from \"d3-dispatch\";\nexport * from \"d3-drag\";\nexport * from \"d3-dsv\";\nexport * from \"d3-ease\";\nexport * from \"d3-fetch\";\nexport * from \"d3-force\";\nexport * from \"d3-format\";\nexport * from \"d3-geo\";\nexport * from \"d3-hierarchy\";\nexport * from \"d3-interpolate\";\nexport * from \"d3-path\";\nexport * from \"d3-polygon\";\nexport * from \"d3-quadtree\";\nexport * from \"d3-random\";\nexport * from \"d3-scale\";\nexport * from \"d3-scale-chromatic\";\nexport * from \"d3-selection\";\nexport * from \"d3-shape\";\nexport * from \"d3-time\";\nexport * from \"d3-time-format\";\nexport * from \"d3-timer\";\nexport * from \"d3-transition\";\nexport * from \"d3-voronoi\";\nexport * from \"d3-zoom\";\n","const Gauge = require('./gauge/gauge');\nconst d3 = require('d3');\n\nconst powerGaugeConfig = {\n    size: 300,\n    clipWidth: 300,\n    clipHeight: 300,\n    ringWidth: 20,\n    maxValue: 10,\n    transitionMs: 4000,\n};\n\nconst directionGaugeConfig = {\n    size: 300,\n    clipWidth: 300,\n    clipHeight: 300,\n    ringWidth: 20,\n    maxValue: 360,\n    majorTicks: 12,\n    minAngle: -180,\n    maxAngle: 180,\n    transitionMs: 4000,\n};\n\n\ncreateGauge('#power-gauge', powerGaugeConfig);\ncreateGauge('#direction-gauge', directionGaugeConfig);\n\nfunction createGauge(id, config) {\n    let flag = false;\n    let powerGauge = new Gauge(id, config);\n    powerGauge.render();\n\n    function updateReadings() {\n        // just pump in random data here...\n\n        let newValue = Math.random() * 20;\n        powerGauge.update(newValue);\n        powerGauge.updateBar(newValue, newValue - 2);\n        if (newValue > 10) {\n            powerGauge.updateLabels(20, 0);\n            flag = true;\n        } else if (newValue <= 10 && flag) {\n            powerGauge.updateLabels(10, 0);\n            flag = false;\n        }\n    }\n\n    // every few seconds update reading values\n    updateReadings();\n    setInterval(function() {\n        updateReadings();\n    }, 5 * 1000);\n}\n","const d3 = require('d3');\nconst Bar = require('./bar/bar');\nconst Pointer = require(\"./pointer/pointer\");\nconst Labels = require(\"./labels/labels\");\n\nmodule.exports = class Gauge {\n    constructor (container, configuration){\n        this.config = {\n            size\t\t\t\t\t\t: 200,\n            clipWidth\t\t\t\t\t: 200,\n            clipHeight\t\t\t\t\t: 110,\n            ringInset\t\t\t\t\t: 20,\n            ringWidth\t\t\t\t\t: 20,\n\n            pointerWidth\t\t\t\t: 10,\n            pointerTailLength\t\t\t: 5,\n            pointerHeadLengthPercent\t: 0.9,\n\n            minValue\t\t\t\t\t: 0,\n            maxValue\t\t\t\t\t: 10,\n\n            minAngle\t\t\t\t\t: -90 - 45,\n            maxAngle\t\t\t\t\t: 90 + 45,\n\n            transitionMs\t\t\t\t: 750,\n\n            majorTicks\t\t\t\t\t: 10,\n            labelFormat\t\t\t\t\t: d3.format(',g'),\n            labelInset\t\t\t\t\t: 10,\n\n            arcColorFn\t\t\t\t\t: d3.interpolateHsl(d3.rgb('#e8e2ca'), d3.rgb('#3e6c0a'))\n        };\n        this.range = undefined;\n        this.r = undefined;\n        this.pointerHeadLength = undefined;\n        this.value = 0;\n\n        this.svg = undefined;\n        this.arc = undefined;\n        this.arcs = undefined;\n        this.foregroundArc = undefined;\n        this.backgroundArc = undefined;\n        this.scale = undefined;\n        this.ticks = undefined;\n        this.tickData = undefined;\n        this.pointer = undefined;\n\n        this.pi = Math.PI;\n        this.cur_color = 'limegreen';\n        this.max = 180;\n        this.min = 0;\n        this.current = 10;\n        this.current = 10;\n\n        this.oR = 100;\n        this.iR = 100 - this.config.ringWidth;\n\n        this.donut = d3.scaleLinear();\n\n        this.container = container;\n        this.configure(configuration);\n        this.redBar = (30 / 360) * 2 * Math.PI;\n        this.orangeBar = (15 / 360) * 2 * Math.PI;\n        this.changeTextColor = false;\n        this.formatTicks = d3.format('.0f');\n    }\n\n    deg2rad(deg) {\n        return deg * Math.PI / 180;\n    }\n\n    rad2deg(rad) {\n        return rad * 180 / Math.PI;\n    }\n\n    newAngle(d) {\n        let that = this;\n        let ratio = that.scale(d);\n        let newAng = that.config.minAngle + (ratio * that.range);\n        return newAng;\n    }\n\n    configure(configuration) {\n        let that = this;\n        let prop = undefined;\n        for ( prop in configuration ) {\n            this.config[prop] = configuration[prop];\n        }\n\n        this.range = this.config.maxAngle - this.config.minAngle;\n        this.r = this.config.size / 2;\n        this.pointerHeadLength = Math.round(this.r * this.config.pointerHeadLengthPercent);\n\n        // a linear scale that maps domain values to a percent from 0..1\n        this.scale = d3.scaleLinear()\n            .range([0,1])\n            .domain([this.config.minValue, this.config.maxValue]);\n\n        this.ticks = this.scale.ticks(this.config.majorTicks);\n        this.tickData = d3.range(this.config.majorTicks).map(function() {return 1/that.config.majorTicks;});\n\n        that.arc = d3.arc()\n            .innerRadius(that.r - that.config.ringWidth - that.config.ringInset)\n            .outerRadius(that.r - that.config.ringInset)\n            .startAngle(function(d, i) {\n                let ratio = d * i;\n                return that.deg2rad(that.config.minAngle);\n            })\n            .endAngle(function(d, i) {\n                let ratio = d * (i+1);\n                return that.deg2rad(that.config.maxAngle);\n            });\n    }\n\n    centerTranslation() {\n        let that = this;\n        return 'translate('+ that.r +','+ that.r +')';\n    }\n\n    isRendered() {\n        let that = this;\n        return (that.svg !== undefined);\n    }\n\n    addBackgroundArcToSvgParent(parentSvg) {\n        return parentSvg.append('g')\n            .attr('class', 'arc')\n            .attr('transform', this.centerTranslation())\n            .append(\"path\")\n            .datum({\n                startAngle: -90 * (Math.PI / 180),\n                endAngle: -90 * (Math.PI / 180)\n            })\n            .style(\"fill\", 'red')\n            .attr(\"d\", this.arc);\n    }\n\n    render(newValue) {\n        let that = this;\n        that.svg = d3.select(that.container)\n            .append('svg:svg')\n            .attr('class', 'Gauge')\n            .attr('width', that.config.clipWidth)\n            .attr('height', that.config.clipHeight)\n            .append('g');\n\n        that.arcs = new Bar(that.svg, that.config, that.r, that.redBar, that.orangeBar, that.changeTextColor);\n        that.labels = new Labels(that.svg, that.config, that.ticks);\n        that.pointer = new Pointer(that.svg, that.config, that.r);\n    }\n\n    update(newValue) {\n        this.pointer.update(newValue);\n    }\n\n    updateBar(newMax, newMin) {\n        this.arcs.update(newMax, newMin);\n    }\n\n    updateLabels(newMax, newMin){\n        this.labels.update(newMax, newMin);\n    }\n};\n","const d3 = require('d3');\n\nmodule.exports = class Bar {\n    constructor (parentSvg, config, r, redBar, orangeBar, changeTextColor){\n        this.pi = Math.PI;\n        this.cur_color = 'limegreen';\n        this.cur_text_color = 'limegreen';\n        this.new_text_color = 'black';\n        this.changeTextColor = changeTextColor;\n        this.max = 180;\n        this.min = 0;\n        this.current = 10;\n        this.current = 10;\n        this.currentFontSize = 50;\n        this.redBar = redBar;\n        this.orangeBar = orangeBar;\n        this.parentSvg = parentSvg;\n        this.config = config;\n        this.r = r;\n        this.barArc = this.createGaugeArc();\n        this.svgRenderedArc = this.addArcToSvgParent(parentSvg);\n        this.max = this.renderMax(parentSvg);\n        this.min = this.renderMin(parentSvg);\n    }\n\n    createGaugeArc() {\n        return d3.arc()\n            .innerRadius(this.r - this.config.ringWidth - this.config.ringInset)\n            .outerRadius(this.r - this.config.ringInset);\n    }\n\n    centerTranslation() {\n        let that = this;\n        return 'translate('+ that.r +','+ that.r +')';\n    }\n\n    addArcToSvgParent(parentSvg) {\n        return parentSvg.append('g')\n            .attr('class', 'arc')\n            .attr('transform', this.centerTranslation())\n            .append(\"path\")\n            .datum({\n                startAngle: -90 * (Math.PI / 180),\n                endAngle: -90 * (Math.PI / 180)\n            })\n            .style(\"fill\", 'red')\n            .attr(\"d\", this.barArc);\n    }\n\n    rounder(numb) {\n        return Math.round(numb * 100) / 100\n    }\n\n    convertScaleToRadians(value) {\n        let segmentOffset = 45;\n        let offset = 5;\n        let gaugeCustomDeg = 20;\n        let test = value - offset;\n        test /= gaugeCustomDeg;\n        return test * (this.config.maxAngle / segmentOffset) * Math.PI;\n    }\n\n    centerTextTranslation(yOffset) {\n        let that = this;\n        return 'translate('+ that.r +','+ (that.r + yOffset)  +')';\n    }\n\n    renderMax(parentSvg) {\n        return parentSvg.append(\"text\").attr(\"transform\", this.centerTextTranslation(this.currentFontSize + 22))\n            .attr(\"text-anchor\", \"middle\").style(\"font-family\", \"Helvetica\").text(this.max);\n    }\n\n    renderMin(parentSvg) {\n        return parentSvg.append(\"text\").attr(\"transform\", this.centerTextTranslation(this.currentFontSize + 44))\n            .attr(\"text-anchor\", \"middle\").style(\"font-family\", \"Helvetica\").text(this.min);\n    }\n\n    update(newMax, newMin) {\n        let that = this;\n        let numPiEnd = this.convertScaleToRadians(newMax);// Get value\n        let numPiStart = this.convertScaleToRadians(newMin);// Get value\n        // let start = numPiEnd - 2;\n        let diff = Math.abs(numPiEnd) - Math.abs(numPiStart);\n        let startAndEnd = {\n            start: numPiStart,\n            end: numPiEnd\n        };\n        if (diff >= that.redBar) {\n            that.new_color = 'red';\n        } else if (diff >= that.orangeBar) {\n            that.new_color = 'orange';\n        } else {\n            that.new_color = 'limegreen';\n        }\n\n        if (that.changeTextColor) {\n            that.min.transition().duration(750).styleTween(\"fill\", function () {\n                return d3.interpolate(that.new_color, that.cur_color);\n            }).text(\"MIN: \" + that.rounder(newMin));\n\n            that.max.transition().duration(750).styleTween(\"fill\", function () {\n                return d3.interpolate(that.new_color, that.cur_color);\n            }).text(\"MAX: \" + that.rounder(newMax));\n        } else {\n            let chanceColor = Math.random() * 10;\n            that.new_text_color = chanceColor > 5 ? 'grey': 'black';\n            that.min.transition().duration(750).styleTween(\"fill\", function () {\n                return d3.interpolate(that.new_text_color, that.cur_text_color);\n            }).text(\"MIN: \" + that.rounder(newMin));\n\n            that.max.transition().duration(750).styleTween(\"fill\", function () {\n                return d3.interpolate(that.new_text_color, that.cur_text_color);\n            }).text(\"MAX: \" + that.rounder(newMax));\n        }\n\n\n        that.svgRenderedArc.transition().duration(750).styleTween(\"fill\", function () {\n            return d3.interpolate(that.new_color, that.cur_color);\n        }).call(aTween, startAndEnd);\n        // Set colors for next transition\n        that.hold = that.cur_color;\n        that.hold_text = that.cur_text_color;\n        that.cur_color = that.new_color;\n        that.cur_text_color = that.new_text_color;\n        that.new_text_color = that.hold_text;\n\n        function aTween(transition, newAngle) {\n            return transition.attrTween(\"d\", function (d) {\n                let startInterpolate = d3.interpolate(d.startAngle, newAngle.start);\n                let endInterpolate = d3.interpolate(d.endAngle, newAngle.end);\n                return function (t) {\n                    d.startAngle = startInterpolate(t);\n                    d.endAngle = endInterpolate(t);\n                    return that.barArc(d);\n                };\n            });\n        }\n    }\n};\n","const d3 = require('d3');\n\nmodule.exports = class Pointer {\n    constructor (parentSvg, config, r){\n        this.currentFontSize = 50;\n        this.config = config;\n        this.r = r;\n\n        this.range = this.config.maxAngle - this.config.minAngle;\n        this.scale = this.createScale(config);\n\n        this.current = this.renderCurrent(parentSvg);\n\n        this.pointerHeadLength = Math.round(this.r * this.config.pointerHeadLengthPercent);\n\n        let pointerLine = this.makePointerLine();\n\n        let pg = this.addArcToSvgParent(parentSvg);\n\n        this.pointer = pg.append('path')\n            .attr('d', pointerLine)\n            .attr('transform', 'rotate(' + this.config.minAngle +')');\n    }\n\n    centerTranslation() {\n        let that = this;\n        return 'translate('+ that.r +','+ that.r +')';\n    }\n\n    makePointerLine() {\n        return d3.line().curve(d3.curveMonotoneX);\n    }\n\n    addArcToSvgParent(parentSvg) {\n        let lineData = [ [this.config.pointerWidth / 2, 0],\n            [0, -this.pointerHeadLength],\n            [-(this.config.pointerWidth / 2), 0],\n            [0, this.config.pointerTailLength],\n            [this.config.pointerWidth / 2, 0] ];\n\n        return parentSvg.append('g').data([lineData])\n            .attr('class', 'pointer')\n            .attr('transform', this.centerTranslation());\n    }\n\n    rounder(numb) {\n        return Math.round(numb * 100) / 100\n    }\n\n    centerTextTranslation(yOffset) {\n        let that = this;\n        return 'translate('+ that.r +','+ (that.r + yOffset)  +')';\n    }\n\n    renderCurrent(parentSvg) {\n        return parentSvg.append(\"text\").attr(\"transform\", this.centerTextTranslation(this.currentFontSize))\n            .attr(\"text-anchor\", \"middle\").style(\"font-size\", this.currentFontSize).style(\"font-family\", \"Helvetica\").text(this.current);\n    }\n\n    createScale(config) {\n        return d3.scaleLinear()\n            .range([0,1])\n            .domain([config.minValue, config.maxValue]);\n    }\n\n    update(newValue) {\n        const ratio = this.scale(newValue);\n        const newAngle = this.config.minAngle + (ratio * this.range);\n        this.pointer.transition()\n            .duration(this.config.transitionMs)\n            .ease(d3.easeElastic)\n            .attr('transform', 'rotate(' + newAngle +')');\n\n        this.current.transition().text(this.rounder(newValue));\n    }\n};\n","const d3 = require('d3');\n\nmodule.exports = class Labels {\n    constructor(parentSvg, config, ticks) {\n        this.parentSvg = parentSvg;\n        // values to handle the labels that need to be deleted!\n        this.oldTicks = [];\n        this.rejects = [];\n\n        this.min = config.minValue;\n        this.max = config.maxValue;\n        this.lg = undefined;\n        this.r = config.size / 2;\n        this.config = config;\n        this.ticks = ticks;\n        this.range = this.config.maxAngle - this.config.minAngle;\n        this.scale = this.createScale(config);\n        this.createLabelArc(parentSvg, config, ticks);\n    }\n\n    centerTranslation() {\n        let that = this;\n        return 'translate(' + that.r + ',' + that.r + ')';\n    }\n\n    createScale(config) {\n        return d3.scaleLinear()\n            .range([0, 1])\n            .domain([config.minValue, config.maxValue]);\n    }\n\n    createLabelArc(parentSvg, config, ticks) {\n        const that = this;\n        let centerTx = that.centerTranslation();\n        this.lg = parentSvg.append('g')\n            .attr('class', 'label')\n            .attr('transform', centerTx);\n        console.log(ticks);\n        return this.createLabels(config, ticks);\n    }\n\n    createLabels(config, ticks) {\n        const that = this;\n        return that.lg.selectAll('text')\n            .data(ticks)\n            .enter().append('text')\n            .attr('class', 'label-text')\n            .attr('transform', function (d) {\n                let ratio = that.scale(d);\n                let newAngle = config.minAngle + (ratio * that.range);\n                return 'rotate(' + newAngle + ') translate(0,' + (config.labelInset - that.r) + ')';\n            })\n            .text(that.config.labelFormat);\n    }\n\n    convertScaleToRadians(value) {\n        let segmentOffset = 45;\n        let offset = 5;\n        let gaugeCustomDeg = 20;\n        let test = value - offset;\n        test /= gaugeCustomDeg;\n        return test * (this.config.maxAngle / segmentOffset) * Math.PI;\n    }\n\n\n    async update(newMax, newMin) {\n        let that = this;\n\n        function random(min, max) {\n            return Math.floor(Math.random() * (max - min + 1) + min);\n        }\n\n        let newScale = d3.scaleLinear()\n            .range([0, 1]).domain([0, newMax]);\n\n        let newTicks = newScale.ticks(newMax);\n\n        that.rejects = that.oldTicks.filter((el) => !newTicks.includes(el));\n        console.log('what are the rejects?');\n        console.log(that.rejects);\n\n        // if new value greater than original, append new blank text until the new value is reached\n        that.createLabels(that.config, newTicks);\n        // TODO factor this out to make it's own function\n        await that.moveCurrentLabels(that, newMax, newScale, newTicks);\n\n        that.removeOldLabels(that, newMax);\n        that.oldTicks = newTicks\n    }\n\n    async moveCurrentLabels(that, newMax, newScale, newTicks) {\n        return await that.parentSvg.selectAll(\".label-text\")\n            .data(newTicks)\n            .transition()\n            .duration(1000)\n            // d is the amount of text elements\n            .attr(\"transform\", function (d) {\n                let ratio = newScale(d);\n                let newAngle = that.config.minAngle + (ratio * that.range);\n                return 'rotate(' + newAngle + ') translate(0,' + (that.config.labelInset - that.r) + ')';\n            })\n            .attr(\"visibility\", function (d) {\n                if (d > newMax) {\n                    return 'hidden';\n                }\n                return 'visible';\n            })\n            .text(that.config.labelFormat)\n            .end();\n    }\n\n    async removeOldLabels(that, newMax) {\n        return await that.parentSvg.selectAll(\".label-text\")\n            .data(that.oldTicks)\n            .transition()\n            .duration(200)\n            .attr(\"visibility\", function (d) {\n                console.log('removing rejects');\n                console.log(d);\n                console.log(newMax);\n                if (that.rejects.includes(d)) {\n                    return 'hidden';\n                }\n                return 'visible';\n            })\n            .text(that.config.labelFormat)\n            .end();\n    }\n};\n"],"sourceRoot":""}