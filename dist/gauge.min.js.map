{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/d3/d3.js","webpack:///./src/app.js","webpack:///./src/gauge/gauge.js","webpack:///./src/gauge/bar/bar.js","webpack:///./src/gauge/pointer/pointer.js","webpack:///./src/gauge/labels/labels.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3","version","d3_arraySlice","slice","d3_array","list","d3_document","this","document","d3_documentElement","node","ownerDocument","documentElement","d3_window","defaultView","childNodes","nodeType","e","length","array","Array","Date","now","createElement","style","setProperty","error","d3_element_prototype","Element","d3_element_setAttribute","setAttribute","d3_element_setAttributeNS","setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","space","local","priority","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","mid","right","ascending","descending","min","f","max","extent","sum","mean","j","quantile","values","H","h","Math","floor","v","median","numbers","push","sort","variance","deviation","apply","sqrt","d3_bisect","d3_transposeLength","bisectLeft","bisect","bisectRight","bisector","shuffle","i0","i1","random","permute","indexes","permutes","pairs","p1","transpose","matrix","row","zip","keys","map","entries","merge","arrays","merged","abs","d3_class","ctor","properties","d3_Map","_","range","start","stop","step","Infinity","Error","k","d3_range_integerScale","forEach","set","isArray","d3_map_proto","d3_map_zero","d3_map_escape","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","d3_vendorSymbol","charAt","toUpperCase","d3_vendorPrefixes","prefixName","has","remove","empty","nest","sortValues","rollup","sortKeys","mapType","depth","keyValue","setter","valuesByKey","sortKey","keyMap","order","add","behavior","rebind","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","listeners","listenerByName","event","z","on","listener","indexOf","concat","d3_eventPreventDefault","preventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","requote","replace","d3_requote_re","d3_subclass","__proto__","d3_selection","groups","d3_selectionPrototype","d3_select","querySelector","d3_selectAll","querySelectorAll","d3_selectMatches","d3_selectMatcher","matches","Sizzle","matchesSelector","selection","select","d3_selection_selector","selector","d3_selection_selectorAll","subgroup","subnode","group","subgroups","parentNode","__data__","selectAll","d3_nsXhtml","d3_nsPrefix","svg","xhtml","xlink","xml","xmlns","d3_selection_attr","qualify","removeAttributeNS","removeAttribute","d3_collapse","trim","d3_selection_classedRe","RegExp","d3_selection_classes","split","d3_selection_classed","d3_selection_classedName","re","classList","getAttribute","lastIndex","test","d3_selection_style","removeProperty","d3_selection_property","d3_selection_creator","createElementNS","namespace","namespaceURI","d3_selectionRemove","parent","removeChild","d3_selection_dataNode","data","d3_selection_filter","d3_selection_each","callback","d3_selection_enter","d3_selection_enterPrototype","prefix","attr","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","textContent","html","innerHTML","append","appendChild","insert","before","insertBefore","groupData","nodeData","n0","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","update","enter","exit","datum","filter","next","nextSibling","comparator","args","d3_selection_on","capture","wrap","d3_selection_onListener","d3_selection_onFilters","onRemove","removeEventListener","$","d3_selection_onFilter","addEventListener","match","upgroup","j0","nodes","mouseenter","mouseleave","related","relatedTarget","compareDocumentPosition","d3_event_dragSelect","d3_event_dragId","d3_event_dragSuppress","click","w","suppressClick","off","setTimeout","mouse","container","d3_mousePoint","d3_mouse_bug44083","navigator","userAgent","changedTouches","ownerSVGElement","createSVGPoint","point","window","scrollX","scrollY","ctm","position","top","margin","padding","border","getScreenCTM","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","touch","touches","drag","origin","mousedown","dragstart","touchstart","id","subject","move","end","dragOffset","correspondingElement","dragged","dragId","dragName","dragSubject","dx","dy","position1","position0","dragRestore","ε","ε2","π","PI","τ","τε","halfπ","d3_radians","d3_degrees","d3_sgn","d3_cross2d","d3_acos","acos","d3_asin","asin","d3_cosh","exp","d3_haversin","sin","ρ","SQRT2","interpolateZoom","p0","S","ux0","uy0","w0","ux1","uy1","w1","d2","log","d1","b0","b1","r0","r1","coshr0","u","d3_sinh","duration","zoom","translate0","center0","center","mousewheelTimer","touchtime","x0","x1","y0","y1","view","scaleExtent","d3_behavior_zoomInfinity","zooming","mousemove","mouseup","g","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","scaleTo","translateTo","zoomTo","that","__chart__","pow","transition","rescale","domain","invert","zoomstarted","zoomed","scale","translate","zoomended","location0","d3_selection_interrupt","scale0","locations0","distance0","zoomName","touchmove","touchend","targets","relocate","started","moved","ended","changed","LN2","q","l0","l1","distance1","scale1","clearTimeout","d3_behavior_zoomDelta","shiftKey","ceil","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","tween","cx","cy","copy","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","color","toString","rgb","hsl","d3_hslPrototype","d3_hsl_rgb","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab_hcl","d3_lab","d3_rgb_lab","brighter","darker","hcl","d3_hclPrototype","d3_hcl_lab","cos","d3_lab_K","lab","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_labPrototype","d3_lab_rgb","d3_xyz_rgb","d3_lab_xyz","atan2","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgbPrototype","d3_rgb_hex","format","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","xhr","headers","request","XMLHttpRequest","responseType","respond","result","status","responseText","d3_xhrHasResponse","load","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","d3_xhr_fixCallback","functor","dsv","delimiter","reFormat","delimiterCode","charCodeAt","typedResponse","parse","formatRow","formatValue","join","parseRows","Function","JSON","stringify","eol","EOL","EOF","rows","N","I","token","formatRows","fieldSet","fields","field","csv","tsv","d3_timer_queueHead","d3_timer_queueTail","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer","delay","then","timer","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","time","d3_format_precision","LN10","flush","d3_formatPrefixes","symbol","formatPrefix","precision","d3_format_re","d3_format_types","String","fromCharCode","X","toPrecision","toExponential","toFixed","d3_format_typeDefault","d3_time","d3_date","d3_date_utc","UTC","getDate","getUTCDate","getDay","getUTCDay","getFullYear","getUTCFullYear","getHours","getUTCHours","getMilliseconds","getUTCMilliseconds","getMinutes","getUTCMinutes","getMonth","getUTCMonth","getSeconds","getUTCSeconds","getTime","getTimezoneOffset","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setFullYear","setUTCFullYear","setHours","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","d3_time_interval","number","date","d0","offset","dt","times","utc","d3_time_interval_utc","year","day","years","days","dayOfYear","interval","week","sunday","weeks","weekOfYear","sundayOfYear","d3_time_formatPads","-","0","d3_time_numberRe","d3_time_percentRe","d3_time_formatPad","fill","width","sign","string","d3_time_formatRe","names","d3_time_formatLookup","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberSunday","U","d3_time_parseWeekNumberMonday","W","d3_time_parseFullYear","d3_time_parseYear","d3_time_parseZone","Z","d3_time_parseMonthNumber","d3_time_parseDay","d3_time_parseDayOfYear","d3_time_parseHour24","d3_time_parseMinutes","M","d3_time_parseSeconds","d3_time_parseMilliseconds","L","d3_time_zone","zs","zh","zm","d3_time_parseLiteralPercent","d3_time_formatMulti","formats","locale","numberFormat","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","specifier","align","zfill","comma","suffix","integer","exponent","zcomma","fullSuffix","negative","unit","after","lastIndexOf","d3_locale_numberFormat","timeFormat","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","d3_time_format","template","d3_time_formats","d3_time_parse","localZ","d3_time_parsers","multi","d3_time_periodLookup","d3_time_dayRe","d3_time_dayLookup","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_monthRe","d3_time_monthLookup","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","A","B","mondayOfYear","Y","%","d3_locale_timeFormat","d3_locale_enUS","d3_adder","geo","d3_adderSum","d3_adderTemp","reset","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","stream","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","sphere","Point","coordinates","MultiPoint","LineString","d3_geo_streamLine","MultiLineString","Polygon","d3_geo_streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area","d3_geo_areaSum","d3_geo_area","d3_geo_centroidW0","d3_geo_centroidW1","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_areaRingSum","d3_geo_areaRingStart","λ00","φ00","λ0","cosφ0","sinφ0","nextPoint","λ","φ","dλ","sdλ","adλ","cosφ","sinφ","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","bounds","φ0","λ1","φ1","λ_","λ__","φ__","dλSum","ranges","bound","ringPoint","ringStart","ringEnd","linePoint","normal","inflection","λi","antimeridian","φi","angle","compareRanges","withinRange","best","centroid","d3_geo_centroid","d3_geo_centroidPoint","d3_geo_centroidLineStart","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","d3_geo_centroidPointXYZ","z0","cz","d3_geo_compose","compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","clip","segment","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","current","isSubject","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","line","rotatedClipStart","pointRing","polygon","meridian","parallel","meridianNormal","polarAngle","winding","ring","point0","arc","intersection","φarc","d3_geo_pointInPolygon","polygonStarted","d3_geo_clipSort","pointLine","buffer","d3_geo_clipBufferListener","ringListener","clean","ringSegments","pop","shift","d3_geo_clipSegmentLength1","lines","rejoin","d3_geo_clipAntimeridian","sλ0","sλ1","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianIntersect","from","to","direction","d3_geom_clipLine","ax","ay","d3_geo_clipExtentMAX","d3_geo_clipExtent","x__","y__","v__","x_","y_","v_","first","listener_","bufferListener","wn","insidePolygon","inside","visible","a1","corner","comparePoints","ca","cb","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","C","ρ0","forward","ρ0_y","clipExtent","output","valid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathAreaPolygon","d3_geo_pathBoundsX0","d3_geo_pathBoundsY0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY1","d3_geo_pathArea","d3_geo_pathAreaRingStart","x00","y00","d3_geo_pathBounds","d3_geo_pathBuffer","pointCircle","d3_geo_pathBufferCircle","pointLineStart","lineEndPolygon","pointRadius","radius","d3_geo_lengthSum","d3_geo_pathCentroid","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","δ2","cosMinDistance","maxDepth","resample","a00","b00","c00","a0","c0","resampleLineTo","d3_geo_transformPoint","c1","φ2","λ2","x2","y2","dx2","dy2","dz","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","projectResample","δλ","δφ","δγ","preclip","postclip","clipAngle","projection","d3_geo_rotation","invalidate","d3_geo_projectionRadians","cr","smallRadius","notHemisphere","v0","v00","point2","point1","code","intersect","d3_geo_circleInterpolate","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","uu","t2","polar","q1","d3_geo_clipCircle","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","path","projectStream","contextStream","cacheStream","transform","methods","projectionMutator","equirectangular","circle","distance","Δλ","sinΔλ","cosΔλ","sinφ1","graticule","X1","X0","Y1","Y0","DX","DY","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","d3_geo_conicConformal","F","d3_geo_mercator","d3_geo_conicEquidistant","G","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","d3_geo_mercatorProjection","clipAuto","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","stereographic","transverseMercator","geom","vertices","fx","fy","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","input","d3_geom_voronoiEdges","d3_geom_voronoiCells","d3_geom_voronoiBeaches","d3_geom_voronoiFirstCircle","d3_geom_voronoiCircles","d3_geom_voronoiBeachPool","d3_geom_voronoiCirclePool","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiRemoveBeach","vertex","previous","P","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","lSite","bx","by","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ha","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","d3_geom_voronoiEdge","d3_geom_voronoiHalfEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","splice","d3_geom_voronoiClipEdges","cell","iHalfEdge","halfEdges","nHalfEdges","cells","iCell","prepare","d3_geom_voronoiCloseCells","diagram","grandpa","uncle","sibling","voronoi","d3_geom_voronoiClipExtent","polygons","links","triangles","s0","s1","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","delaunay","quadtree","compat","xs","ys","x1_","y1_","x2_","y2_","leaf","nx","ny","insertChild","nPoint","xm","ym","below","root","visit","d3_geom_quadtreeVisit","sx","sy","children","find","closestPoint","minDistance2","distance2","d3_geom_quadtreeFind","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolators","d3_interpolateArray","na","nb","interpolateArray","d3_ease_default","d3_ease","linear","poly","quad","d3_ease_quad","cubic","d3_ease_cubic","d3_ease_sin","d3_ease_exp","d3_ease_circle","elastic","back","bounce","d3_ease_bounce","d3_ease_mode","in","out","d3_ease_reverse","in-out","d3_ease_reflect","out-in","d3_ease_cubicInOut","t3","d3_interpolateRound","d3_transform","kx","d3_transformNormalize","kz","d3_transformDot","ky","skew","ease","interpolateHcl","ah","ac","al","bh","bc","bl","interpolateHsl","as","interpolateLab","aa","ba","interpolateRound","baseVal","consolidate","d3_transformIdentity","d3_interpolateTransformPop","d3_interpolateTransform","ta","tb","d3_interpolateTranslate","ra","rb","d3_interpolateRotate","wa","wb","d3_interpolateSkew","ka","kb","d3_interpolateScale","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","aNodes","d3_layout_bundleAncestors","bNodes","aNode","bNode","sharedNode","d3_layout_bundleLeastCommonAncestor","ancestors","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","interpolateTransform","layout","bundle","paths","chord","chords","sortGroups","sortSubgroups","sortChords","relayout","groupSums","groupIndex","subgroupIndex","di","dj","subindex","startAngle","endAngle","resort","force","alpha","distances","strengths","charges","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","charge","chargeDistance2","d3_layout_forceChargeDistance2","gravity","theta2","repulse","dw","dn","pointCharge","dragmove","resume","tick","weight","d3_layout_forceAccumulate","chargeDistance","theta","neighbors","dimension","candidates","d3_layout_hierarchyRebind","hierarchy","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","stack","childs","revalue","partition","pie","Number","d3_layout_pieSortByValue","padAngle","da","pa","arcs","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","d3_layout_stackMaxIndex","sums","d3_layout_stackReduceSum","bottom","tops","bottoms","default","silhouette","wiggle","s2","s3","o0","expand","zero","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","d3_layout_packUnlink","db","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeAncestor","vim","ancestor","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","d3_scale_niceStep","d3_scale_niceIdentity","histogram","frequency","valuer","ranger","binner","bin","bins","thresholds","pack","d3_layout_packTransform","separation","nodeSize","root0","root1","node1","queue","wrapTree","firstWalk","secondWalk","sizeNode","tx","siblings","d3_layout_treeShift","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","cluster","previousNode","d3_layout_clusterX","d3_layout_clusterY","d3_layout_clusterLeft","d3_layout_clusterRight","treemap","stickies","pad","sticky","ratio","squarify","score","remaining","worst","stickify","rmax","rmin","padConstant","µ","σ","logNormal","bates","irwinHall","d3_scale_polylinear","d3_scale_linearRebind","d3_scale_linearNice","d3_scale_linearTickRange","span","err","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearPrecision","d3_scale_linearFormatSignificant","d3_scale_linearFormatPrecision","d3_scale_linear","clamp","rangeRound","ticks","tickFormat","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_powPow","d3_scale_pow","powp","powb","ordinal","d3_scale_ordinal","rangeBand","steps","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","d3_zero","d3_scale_quantile","quantiles","invertExtent","quantize","d3_scale_quantize","threshold","d3_scale_threshold","identity","d3_scale_identity","innerRadius","d3_svg_arcInnerRadius","outerRadius","d3_svg_arcOuterRadius","cornerRadius","padRadius","d3_svg_arcAuto","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","cw","rc","circleSegment","rp","ap","d3_svg_arcSweep","h1","h0","rc1","rc0","oc","kc","lc","t30","d3_svg_arcCornerTangents","t12","t03","t21","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","defined","d3_svg_lineLinear","interpolateKey","tension","d3_svg_lineInterpolators","linear-closed","d3_svg_lineLinearClosed","step-before","d3_svg_lineStepBefore","step-after","d3_svg_lineStepAfter","basis","d3_svg_lineBasis","basis-open","pi","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","basis-closed","cardinal","d3_svg_lineHermite","d3_svg_lineCardinalTangents","cardinal-open","cardinal-closed","monotone","tangents","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","lp","p2","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineRadial","d3_svg_area","interpolateReverse","points0","points1","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","radial","curve","self","diagonal","p3","projection_","d3_svg_diagonalRadialProjection","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionNamespace","d3_transitionInherit","d3_transitionNode","d3_transition","interrupt","d3_selection_interruptNS","lock","activeId","active","count","d3_transitionPrototype","d3_transition_tween","d3_transition_text","inherit","tweens","elapsed","cancelId","cancel","subnodes","nameNS","attrNull","attrNullNS","attrTween","styleNull","styleTween","inheritId","id0","id1","axis","tickFormat_","orient","d3_svg_axisDefaultOrient","innerTickSize","outerTickSize","tickPadding","tickArguments_","tickValues","tickTransform","tickEnter","tickExit","tickUpdate","tickSpacing","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","d3_svg_axisX","d3_svg_axisY","d3_svg_axisOrients","tickSize","tickSubdivide","brush","xExtentDomain","yExtentDomain","xExtent","yExtent","xClamp","yClamp","resizes","d3_svg_brushResizes","brushstart","background","resize","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","eventTarget","event_","resizing","resizingX","resizingY","dragging","keyCode","brushmove","brushend","ex","ey","altKey","move1","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","d3_time_scaleMilliseconds","d3_time_scaleDate","skip","skipped","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","d3_json","d3_html","createRange","selectNode","body","createContextualFragment","json","responseXML","undefined","Gauge","powerGauge","clipWidth","clipHeight","ringWidth","maxValue","transitionMs","updateReadings","updateBar","newValue","render","setInterval","onDocumentReady","Bar","Pointer","Labels","[object Object]","configuration","config","ringInset","pointerWidth","pointerTailLength","pointerHeadLengthPercent","minValue","minAngle","maxAngle","majorTicks","labelFormat","labelInset","arcColorFn","pointerHeadLength","foregroundArc","backgroundArc","tickData","pointer","cur_color","oR","iR","donut","configure","deg","rad","prop","deg2rad","parentSvg","centerTranslation","labels","newMax","newMin","currentFontSize","barArc","createGaugeArc","svgRenderedArc","addArcToSvgParent","renderMax","renderMin","numb","yOffset","centerTextTranslation","numPiEnd","convertScaleToRadians","numPiStart","diff","startAndEnd","new_color","rounder","newAngle","startInterpolate","endInterpolate","hold","createScale","renderCurrent","pointerLine","makePointerLine","pg","lineData","lg","createLabelArc","centerTx","ticksToUse","newScale","newTicks","console"],"mappings":"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","file":"gauge.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();","const Gauge = require('./gauge/gauge');\nconst d3 = require('d3');\n\nonDocumentReady();\n\nfunction onDocumentReady() {\n    var powerGauge = new Gauge('#power-Gauge', {\n        size: 300,\n        clipWidth: 300,\n        clipHeight: 300,\n        ringWidth: 60,\n        maxValue: 10,\n        transitionMs: 4000,\n    });\n    powerGauge.render();\n\n    function updateReadings() {\n        // just pump in random data here...\n        var newValue = Math.random() * 10;\n        var newValue = 15;\n        powerGauge.update(newValue);\n        powerGauge.updateBar(newValue, newValue - 1);\n    }\n\n    // every few seconds update reading values\n    updateReadings();\n    setInterval(function() {\n        updateReadings();\n    }, 5 * 1000);\n}\n","const d3 = require('d3');\nconst Bar = require('./bar/bar');\nconst Pointer = require(\"./pointer/pointer\");\nconst Labels = require(\"./labels/labels\");\n\nmodule.exports = class Gauge {\n    constructor (container, configuration){\n        this.config = {\n            size\t\t\t\t\t\t: 200,\n            clipWidth\t\t\t\t\t: 200,\n            clipHeight\t\t\t\t\t: 110,\n            ringInset\t\t\t\t\t: 20,\n            ringWidth\t\t\t\t\t: 20,\n\n            pointerWidth\t\t\t\t: 10,\n            pointerTailLength\t\t\t: 5,\n            pointerHeadLengthPercent\t: 0.9,\n\n            minValue\t\t\t\t\t: 0,\n            maxValue\t\t\t\t\t: 10,\n\n            minAngle\t\t\t\t\t: -90 - 45,\n            maxAngle\t\t\t\t\t: 90 + 45,\n\n            transitionMs\t\t\t\t: 750,\n\n            majorTicks\t\t\t\t\t: 10,\n            labelFormat\t\t\t\t\t: d3.format(',g'),\n            labelInset\t\t\t\t\t: 10,\n\n            arcColorFn\t\t\t\t\t: d3.interpolateHsl(d3.rgb('#e8e2ca'), d3.rgb('#3e6c0a'))\n        };\n        this.range = undefined;\n        this.r = undefined;\n        this.pointerHeadLength = undefined;\n        this.value = 0;\n\n        this.svg = undefined;\n        this.arc = undefined;\n        this.arcs = undefined;\n        this.foregroundArc = undefined;\n        this.backgroundArc = undefined;\n        this.scale = undefined;\n        this.ticks = undefined;\n        this.tickData = undefined;\n        this.pointer = undefined;\n\n        this.pi = Math.PI;\n        this.cur_color = 'limegreen';\n        this.max = 180;\n        this.min = 0;\n        this.current = 10;\n        this.current = 10;\n\n        this.oR = 100;\n        this.iR = 100 - this.config.ringWidth;\n\n        this.donut = d3.layout.pie();\n\n        this.container = container;\n        this.configure(configuration);\n    }\n\n    deg2rad(deg) {\n        return deg * Math.PI / 180;\n    }\n\n    rad2deg(rad) {\n        return rad * 180 / Math.PI;\n    }\n\n    newAngle(d) {\n        var that = this;\n        var ratio = that.scale(d);\n        var newAng = that.config.minAngle + (ratio * that.range);\n        return newAng;\n    }\n\n    configure(configuration) {\n        var that = this;\n        var prop = undefined;\n        for ( prop in configuration ) {\n            this.config[prop] = configuration[prop];\n        }\n\n        this.range = this.config.maxAngle - this.config.minAngle;\n        this.r = this.config.size / 2;\n        this.pointerHeadLength = Math.round(this.r * this.config.pointerHeadLengthPercent);\n\n        // a linear scale that maps domain values to a percent from 0..1\n        this.scale = d3.scale.linear()\n            .range([0,1])\n            .domain([this.config.minValue, this.config.maxValue]);\n\n        this.ticks = this.scale.ticks(this.config.majorTicks);\n        this.tickData = d3.range(this.config.majorTicks).map(function() {return 1/that.config.majorTicks;});\n\n        that.arc = d3.svg.arc()\n            .innerRadius(that.r - that.config.ringWidth - that.config.ringInset)\n            .outerRadius(that.r - that.config.ringInset)\n            .startAngle(function(d, i) {\n                var ratio = d * i;\n                return that.deg2rad(that.config.minAngle);\n            })\n            .endAngle(function(d, i) {\n                var ratio = d * (i+1);\n                return that.deg2rad(that.config.maxAngle);\n            });\n    }\n\n    centerTranslation() {\n        var that = this;\n        return 'translate('+ that.r +','+ that.r +')';\n    }\n\n    isRendered() {\n        var that = this;\n        return (that.svg !== undefined);\n    }\n\n    addBackgroundArcToSvgParent(parentSvg) {\n        return parentSvg.append('g')\n            .attr('class', 'arc')\n            .attr('transform', this.centerTranslation())\n            .append(\"path\")\n            .datum({\n                startAngle: -90 * (Math.PI / 180),\n                endAngle: -90 * (Math.PI / 180)\n            })\n            .style(\"fill\", 'blue')\n            .attr(\"d\", this.arc);\n    }\n\n    render(newValue) {\n        var that = this;\n        that.svg = d3.select(that.container)\n            .append('svg:svg')\n            .attr('class', 'Gauge')\n            .attr('width', that.config.clipWidth)\n            .attr('height', that.config.clipHeight)\n            .append('g');\n\n        that.arcs = new Bar(that.svg, that.config, that.r);\n        that.labels = new Labels(that.svg, that.config, that.ticks);\n        that.pointer = new Pointer(that.svg, that.config, that.r);\n    }\n\n    update(newValue) {\n        this.pointer.update(newValue);\n    }\n\n    updateBar(newMax, newMin) {\n        this.arcs.update(newMax, newMin);\n    }\n\n    updateLabels(newMax, newMin){\n        this.labels.update(newMax, newMin);\n    }\n}","const d3 = require('d3');\n\nmodule.exports = class Bar {\n    constructor (parentSvg, config, r){\n        this.pi = Math.PI;\n        this.cur_color = 'limegreen';\n        this.max = 180;\n        this.min = 0;\n        this.current = 10;\n        this.current = 10;\n        this.currentFontSize = 50;\n        this.parentSvg = parentSvg;\n        this.config = config;\n        this.r = r;\n        this.barArc = this.createGaugeArc();\n        this.svgRenderedArc = this.addArcToSvgParent(parentSvg);\n        this.max = this.renderMax(parentSvg);\n        this.min = this.renderMin(parentSvg);\n    }\n    \n    createGaugeArc() {\n        return d3.svg.arc()\n            .innerRadius(this.r - this.config.ringWidth - this.config.ringInset)\n            .outerRadius(this.r - this.config.ringInset);\n    }\n\n    centerTranslation() {\n        var that = this;\n        return 'translate('+ that.r +','+ that.r +')';\n    }\n    \n    addArcToSvgParent(parentSvg) {\n        return parentSvg.append('g')\n            .attr('class', 'arc')\n            .attr('transform', this.centerTranslation())\n            .append(\"path\")\n            .datum({\n                startAngle: -90 * (Math.PI / 180),\n                endAngle: -90 * (Math.PI / 180)\n            })\n            .style(\"fill\", 'red')\n            .attr(\"d\", this.barArc);\n    }\n\n    rounder(numb) {\n        return Math.round(numb * 100) / 100\n    }\n\n    convertScaleToRadians(value) {\n        var segmentOffset = 45;\n        var offset = 5;\n        var gaugeCustomDeg = 20;\n        var test = value - offset;\n        test /= gaugeCustomDeg;\n        return test * (this.config.maxAngle / segmentOffset) * Math.PI;\n    }\n\n    centerTextTranslation(yOffset) {\n        var that = this;\n        return 'translate('+ that.r +','+ (that.r + yOffset)  +')';\n    }\n    \n    renderMax(parentSvg) {\n        return parentSvg.append(\"text\").attr(\"transform\", this.centerTextTranslation(this.currentFontSize + 22))\n            .attr(\"text-anchor\", \"middle\").style(\"font-family\", \"Helvetica\").text(this.max);\n    }\n    \n    renderMin(parentSvg) {\n        return parentSvg.append(\"text\").attr(\"transform\", this.centerTextTranslation(this.currentFontSize + 44))\n            .attr(\"text-anchor\", \"middle\").style(\"font-family\", \"Helvetica\").text(this.min);\n    }\n\n    update(newMax, newMin) {\n        var that = this;\n        var numPiEnd = this.convertScaleToRadians(newMax);// Get value\n        var numPiStart = this.convertScaleToRadians(newMin);// Get value\n        // var start = numPiEnd - 2;\n        var diff = Math.abs(numPiEnd) - Math.abs(numPiStart);\n        var startAndEnd = {\n            start: numPiStart,\n            end: numPiEnd\n        };\n        if (diff >= (30 / 360) * 2 * Math.PI) {\n            this.new_color = 'red';\n        } else if (diff >= (15 / 360) * 2 * Math.PI) {\n            this.new_color = 'orange';\n        } else {\n            this.new_color = 'limegreen';\n        }\n\n        this.min.transition().duration(750).styleTween(\"fill\", function () {\n            return d3.interpolate(this.new_color, this.cur_color);\n        }).text(\"MIN: \" + this.rounder(newMin));\n\n        this.max.transition().duration(750).styleTween(\"fill\", function () {\n            return d3.interpolate(this.new_color, this.cur_color);\n        }).text(\"MAX: \" + this.rounder(newMax));\n\n        this.svgRenderedArc.transition().duration(750).styleTween(\"fill\", function () {\n            return d3.interpolate(this.new_color, this.cur_color);\n        }).call(aTween, startAndEnd);\n        // Set colors for next transition\n        this.hold = this.cur_color;\n        this.cur_color = this.new_color;\n        this.new_color = this.hold;\n\n        function aTween(transition, newAngle) {\n            return transition.attrTween(\"d\", function (d) {\n                var startInterpolate = d3.interpolate(d.startAngle, newAngle.start);\n                var endInterpolate = d3.interpolate(d.endAngle, newAngle.end);\n                return function (t) {\n                    d.startAngle = startInterpolate(t);\n                    d.endAngle = endInterpolate(t);\n                    return that.barArc(d);\n                };\n            });\n        }\n    }\n}","const d3 = require('d3');\n\nmodule.exports = class Pointer {\n    constructor (parentSvg, config, r){\n        this.currentFontSize = 50;\n        this.config = config;\n        this.r = r;\n\n        this.range = this.config.maxAngle - this.config.minAngle;\n        this.scale = this.createScale(config);\n\n        this.current = this.renderCurrent(parentSvg);\n\n        this.pointerHeadLength = Math.round(this.r * this.config.pointerHeadLengthPercent);\n\n        let pointerLine = this.makePointerLine();\n\n        let pg = this.addArcToSvgParent(parentSvg);\n\n        this.pointer = pg.append('path')\n            .attr('d', pointerLine)\n            .attr('transform', 'rotate(' + this.config.minAngle +')');\n    }\n\n    centerTranslation() {\n        var that = this;\n        return 'translate('+ that.r +','+ that.r +')';\n    }\n\n    makePointerLine() {\n        return d3.svg.line().interpolate('monotone');\n    }\n\n    addArcToSvgParent(parentSvg) {\n        var lineData = [ [this.config.pointerWidth / 2, 0],\n            [0, -this.pointerHeadLength],\n            [-(this.config.pointerWidth / 2), 0],\n            [0, this.config.pointerTailLength],\n            [this.config.pointerWidth / 2, 0] ];\n\n        return parentSvg.append('g').data([lineData])\n            .attr('class', 'pointer')\n            .attr('transform', this.centerTranslation());\n    }\n\n    rounder(numb) {\n        return Math.round(numb * 100) / 100\n    }\n\n    centerTextTranslation(yOffset) {\n        var that = this;\n        return 'translate('+ that.r +','+ (that.r + yOffset)  +')';\n    }\n\n    renderCurrent(parentSvg) {\n        return parentSvg.append(\"text\").attr(\"transform\", this.centerTextTranslation(this.currentFontSize))\n            .attr(\"text-anchor\", \"middle\").style(\"font-size\", this.currentFontSize).style(\"font-family\", \"Helvetica\").text(this.current);\n    }\n\n    createScale(config) {\n        return d3.scale.linear()\n            .range([0,1])\n            .domain([config.minValue, config.maxValue]);\n    }\n\n    update(newValue) {\n        const ratio = this.scale(newValue);\n        const newAngle = this.config.minAngle + (ratio * this.range);\n        this.pointer.transition()\n            .duration(this.config.transitionMs)\n            .ease('elastic')\n            .attr('transform', 'rotate(' + newAngle +')');\n\n        this.current.transition().text(this.rounder(newValue));\n    }\n}","const d3 = require('d3');\n\nmodule.exports = class Labels {\n    constructor (parentSvg, config, ticks){\n        this.parentSvg = parentSvg;\n        this.min = config.minValue;\n        this.max = config.maxValue;\n        this.lg = undefined;\n        this.r = config.size / 2;\n        this.config = config;\n        this.ticks = ticks;\n        this.range = this.config.maxAngle - this.config.minAngle;\n        this.scale = this.createScale(config);\n        this.createLabelArc(parentSvg, config, ticks);\n    }\n\n    centerTranslation() {\n        var that = this;\n        return 'translate('+ that.r +','+ that.r +')';\n    }\n\n    createScale(config) {\n        return d3.scale.linear()\n            .range([0,1])\n            .domain([config.minValue, config.maxValue]);\n    }\n\n    createLabelArc(parentSvg, config, ticks) {\n        const that = this;\n        var centerTx = that.centerTranslation();\n        this.lg = parentSvg.append('g')\n            .attr('class', 'label')\n            .attr('transform', centerTx);\n        return this.lg.selectAll('text')\n            .data(ticks)\n            .enter().append('text')\n            .attr('class', 'label-text')\n            .attr('transform', function(d) {\n                var ratio = that.scale(d);\n                var newAngle = config.minAngle + (ratio * that.range);\n                return 'rotate(' + newAngle +') translate(0,' +(config.labelInset - that.r) +')';\n            })\n            .text(that.config.labelFormat);\n    }\n\n    convertScaleToRadians(value) {\n        var segmentOffset = 45;\n        var offset = 5;\n        var gaugeCustomDeg = 20;\n        var test = value - offset;\n        test /= gaugeCustomDeg;\n        return test * (this.config.maxAngle / segmentOffset) * Math.PI;\n    }\n\n    removeLabels() {\n        this.parentSvg\n            .selectAll(\".label-text\")\n            .remove('text')\n    }\n\n    update(newMax, newMin) {\n        var that = this;\n\n        function random(min, max){\n            return Math.floor(Math.random() * (max - min + 1) + min);\n        }\n\n        let newScale = d3.scale.linear()\n            .range([0,1]).domain([0, newMax]);\n\n        let newTicks = newScale.ticks(newMax);\n\n        let tickDataObject = {\n            past: that.ticks,\n            future: newTicks\n        }\n\n        // d3.interpolate(that.lg, newLabs());\n        //\n        //\n        // function newLabs() {\n        //     that.removeLabels();\n        //     that.scale = that.createScale({\n        //         minValue: 0,\n        //         maxValue: newMax\n        //     })\n        //     that.createLabelArc(that.parentSvg, that.config, newTicks);\n        // }\n\n        let ticksToUse;\n\n        if(Math.max(...newTicks) > Math.max(...that.ticks)) {\n            ticksToUse = newTicks;\n            this.parentSvg.selectAll(\".label-text\")\n        }\n\n        let newRange = newMax - this.config.minAngle;\n\n        console.log('new ticks are');\n        console.log(this.parentSvg.selectAll(\".label-text\"));\n        console.log('what are the new ticks?');\n        console.log(newTicks);\n\n        // if new value greater than origional, append new blank text until the new value is reached\n\n\n        this.parentSvg.selectAll(\".label-text\")\n            .data(newTicks)\n            // .append('text')\n            .transition()\n            .duration(1000)\n            // d is the amount of text elements\n            .attr(\"transform\", function(d) {\n                var ratio = newScale(d);\n                var newAngle = that.config.minAngle + (ratio * that.range);\n                console.log('what is d?');\n                console.log(d);\n                return 'rotate(' + newAngle +') translate(0,' +(that.config.labelInset - that.r) +')';\n            })\n            .attr(\"visibility\", function(d) {\n                if (d > newMax) {\n                    return 'hidden';\n                }\n                return 'visible';\n            })\n            .text(that.config.labelFormat);\n\n        // that.scale.range([0,1]).domain([0, newMax]);\n        // this.parentSvg.selectAll(\".label-text\")\n        //     .transition()\n        //     .call(that.scale)\n\n        // function labelTween(transition, newScale) {\n        //     return transition.attrTween(\"transform\", function (d) {\n        //         // Todo change start and end angles to start and end labels\n        //         console.log('what is d?');\n        //         console.log(d);\n        //         var interpolate = d3.interpolate(that.scale, newScale);\n        //         return function (t) {\n        //             d = interpolate(t);\n        //             return that.createLabelArc(that.parentSvg, that.config, d);\n        //         };\n        //     });\n        // }\n    }\n}"],"sourceRoot":""}